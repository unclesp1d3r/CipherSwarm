version: 2.1
orbs:
  ruby: circleci/ruby@2.1.1
jobs:
  test-ruby:
    # Install gems, run rspec tests
    docker:
      - image: cimg/ruby:3.2.2-node
      - image: cimg/postgres:16.2
        environment:
          POSTGRES_PASSWORD: password
    environment:
      RAILS_ENV: test
      CC_TEST_REPORTER_ID: $CC_TEST_REPORTER_ID
      RAILS_MASTER_KEY: $RAILS_MASTER_KEY
    steps:
      - checkout
      - ruby/install-deps
      # Wait for postgres
      - run:
          name: Wait for postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      # Config database
      - run:
          name: Config database
          command: |
            echo 'test:
              adapter: postgresql
              database: apptestdb
              username: postgres
              password: password
              host: localhost
            ' > config/database.yml
      - run:
          name: Setup Database
          command: bundle exec rake db:create db:schema:load --trace
      # Rubocop
      - ruby/rubocop-check
      # Brakeman
      - run:
          name: Run Brakeman
          command: bundle exec brakeman
      # Rspec
      - run:
          name: Setup Code Climate Test Reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      # - run:
      #     name: Run RSpec
      #     command: |
      #       bundle exec rspec --profile 10 \
      #                         --format RspecJunitFormatter \
      #                         --out /tmp/test-results/rspec.xml \
      #                         --format progress \
      #                         $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      #     when: always
      - ruby/rspec-test:
          out-path: /tmp/test-results
      # - store_test_results:
      #     path: /tmp/test-results
      # - store_artifacts:
      #     path: /tmp/test-results
      #     destination: test-results
      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter format-coverage -t simplecov $CIRCLE_ARTIFACTS/coverage/.resultset.json
            ./tmp/cc-test-reporter upload-coverage
  deploy:
    # This is an example deploy job, not actually used by the workflow
    docker:
      - image: cimg/base:stable
    steps:
      # Replace this with steps to deploy to users
      - run:
          name: deploy
          command: "#e.g. ./deploy.sh"
      - run:
          name: found github actions config
          command: ":"
workflows:
  build-and-test:
    jobs:
      - test-ruby
    # - deploy:
    #     requires:
    #       - test-ruby
