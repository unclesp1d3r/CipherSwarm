---
description: 
globs: 
alwaysApply: true
---

## Error Philosophy

- Prefer raising custom exceptions over returning raw dicts or booleans.
- Define custom exception types in `app/exceptions.py`.

## Cursor Instructions

- Use `fastapi.HTTPException` for API-specific errors.
- Wrap service-level logic in `try/except` only where needed.
- Avoid catching `Exception` unless absolutely required.

## Examples

```python
raise HTTPException(status_code=404, detail="Agent not found")
```

Or in service code:

```python
raise AgentNotFound(agent_id)
```


### Additional Guidelines for Skirmish

- Never use `except:` without specifying the exception type.
- Custom exceptions must be defined in `app/core/exceptions.py`.
- All API-facing errors must be wrapped in FastAPI `HTTPException`.
- Internal error logs should use structured logging with traceback, not raw print().
