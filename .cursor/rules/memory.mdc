---
description: This file governs how Skirmish (or any AI assistant) should use and update the memory file for the Primary Memory File
globs: 
alwaysApply: false
---
# üß† AI Memory File Configuration

This file governs how Skirmish (or any AI assistant) should use and update the memory file for this pr Primary Memory File

- The main memory reference is [AI_MEMORY.md](mdc:AI_MEMORY.md).
- This file should be **consulted before** any debugging, coding, or test-writing work begins.
- It is the **source of operational truth** for all historical learnings, quirks, and established practices on this project.

---

## ‚úÖ Responsibilities

### When to Read from Memory

- At the start of any implementation or debugging task.
- When analyzing failures, reviewing API expectations, or dealing with headers, schemas, or database state.
- Any time there's confusion about prior behavior, requirements, or implementation reasons.

### When to Write to Memory

- After resolving a hard-to-find bug.
- After a lesson that took longer than 30 minutes to learn or debug.
- When a compatibility issue, framework quirk, or hidden dependency behavior is discovered.
- When a test repeatedly fails due to an edge case or contract mismatch.
- After resolving an inconsistency between v1 and v2 endpoint behavior.

---

## üß∞ Add Memory Entries In This Format

Example:

```markdown
### FastAPI Header Validation Issue

- **Issue:** FastAPI treats missing headers as 422 errors unless made optional (`Header(None)`).
- **Workaround:** Use `Optional[str] = Header(None, alias="Header-Name")` for any optional headers.
- **Date:** 2025-05-04
```

---

## üîÅ Weekly Cleanup Task

- At the **start of each week**, check for:
  - Redundant entries
  - Obsolete patterns
  - Lessons that should be merged under umbrella topics (e.g., ‚ÄúFastAPI Header Handling‚Äù)

---

## ‚öôÔ∏è Behavioral Rules

### Rule: Record Learnings to Memory

**When to Trigger:**

- You fix a bug that could've been avoided with prior knowledge.
- You discover a workaround, configuration requirement, or compatibility issue.

**What to Do:**

- Append an entry to [AI_MEMORY.md](mdc:AI_MEMORY.md) under the appropriate heading.
- Use the provided example format (with title, issue, workaround, and date).
- Keep entries concise and factual.

---

### Rule: Consult Memory Bank Before Coding

**When to Trigger:**

- You are starting a new task, test, refactor, or fix.
- You are unsure whether this area of the code has been problematic before.

**What to Do:**

- Proactively read [AI_MEMORY.md](mdc:AI_MEMORY.md).
- Factor in any related prior entries when making implementation decisions.
- Prefer the established workaround or lesson unless told to override.

---

## üß† Reminder

If you're Skirmish or another AI assistant:  
**Don't wait to be told to check the memory. ** That's your job.  
**If a mistake was repeated that could've been avoided by checking memory, it's on you.**