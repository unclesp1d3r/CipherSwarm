---
description: 
globs: templates/**/*.html.j2
alwaysApply: false
---
### üìè Cursor Rule ‚Äì Alpine.js Usage in HTMX Templates

Always use Alpine.js for dynamic behavior instead of custom JavaScript.

## Rule: Prefer Alpine.js over raw JavaScript

- All interactive behavior (toggle, expand, validate, modals, dynamic class toggle, etc.) in HTMX templates must use [Alpine.js](mdc:https:/alpinejs.dev) directives instead of `onclick`, `onchange`, or inline `<script>` tags.
- Avoid writing vanilla JavaScript blocks or `document.querySelector()` calls. Use `x-data`, `x-bind`, `x-model`, `x-show`, `x-transition`, and `@event` listeners instead.
- Do not include `htmx.on()` or similar unless Alpine.js cannot express the behavior cleanly (rare).
- Use `x-init` for initialization logic instead of JS `<script>` tags.
- Avoid stateful behavior spread across HTMX fragments and JS files. Alpine handles scoped state better for modal, form, or inline behavior.
- Treat Alpine.js as the official enhancement layer for HTMX+Flowbite in CipherSwarm.



---

### üîß Example

Instead of:

```html
<button onclick="document.getElementById('form').classList.toggle('hidden')">Toggle</button>
````

Use:

```html
<div x-data="{ open: false }">
  <button @click="open = !open">Toggle</button>
  <form x-show="open" x-transition id="form">...</form>
</div>
```

