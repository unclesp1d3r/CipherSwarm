name: CI

env:
  RAILS_ENV: test
  CI: true
  RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
  DATABASE_URL: postgres://postgres:postgres@localhost:5432/cipherswarm_test
  CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

on:
  pull_request:
  push:
    branches: [main, develop]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with: { ruby-version: .ruby-version, bundler-cache: true }
      - name: Scan for security vulnerabilities in Ruby dependencies
        run: bin/brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with: { ruby-version: .ruby-version, bundler-cache: true }
      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips postgresql-client libpq-dev
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with: { ruby-version: .ruby-version, bundler-cache: true }
      - uses: oven-sh/setup-bun@v2
      - name: Setup Database
        run: bin/bundle exec rake db:setup --trace
      - name: Install yarn packages
        run: yarn install
      - name: Precompile assets
        run: bin/bundle exec rake assets:precompile
      - name: Run Rails Setup
        run: bin/setup
      - name: Setup Code Climate Test Reporter
        if: env.CC_TEST_REPORTER_ID != ''
        run: |
          mkdir -p tmp/
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
          chmod +x ./tmp/cc-test-reporter
          ./tmp/cc-test-reporter before-build
      - name: Run tests
        run: bin/bundle exec rspec --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml --format progress
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: /tmp/test-results
          if-no-files-found: ignore
      - name: Upload coverage results to Code Climate
        if: env.CC_TEST_REPORTER_ID != ''
        run: |
          ./tmp/cc-test-reporter format-coverage -t simplecov coverage/.resultset.json
          ./tmp/cc-test-reporter upload-coverage
      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: "${{ github.workspace }}/tmp/screenshots"
          if-no-files-found: ignore
