"""Unified Migration

Revision ID: 81868238d2dd
Revises:
Create Date: 2025-06-24 01:53:50.043568+00:00

"""


from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "81868238d2dd"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "attack_resource_files",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=True),
        sa.Column("file_name", sa.String(length=255), nullable=False),
        sa.Column("download_url", sa.String(length=1024), nullable=False),
        sa.Column("checksum", sa.String(length=64), nullable=False),
        sa.Column("guid", sa.Uuid(), nullable=False),
        sa.Column(
            "resource_type",
            sa.Enum(
                "MASK_LIST",
                "RULE_LIST",
                "WORD_LIST",
                "CHARSET",
                "DYNAMIC_WORD_LIST",
                "EPHEMERAL_WORD_LIST",
                "EPHEMERAL_MASK_LIST",
                "EPHEMERAL_RULE_LIST",
                name="attackresourcetype",
            ),
            nullable=False,
        ),
        sa.Column("line_format", sa.String(length=32), nullable=False),
        sa.Column("line_encoding", sa.String(length=16), nullable=False),
        sa.Column("used_for_modes", sa.JSON(), nullable=False),
        sa.Column("source", sa.String(length=32), nullable=False),
        sa.Column("line_count", sa.Integer(), nullable=False),
        sa.Column("byte_size", sa.Integer(), nullable=False),
        sa.Column("content", sa.JSON(), nullable=True),
        sa.Column("is_uploaded", sa.Boolean(), nullable=False),
        sa.Column("file_label", sa.String(length=50), nullable=True),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("guid"),
    )
    op.create_table(
        "attack_template_records",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("description", sa.String(length=512), nullable=True),
        sa.Column("attack_mode", sa.String(length=32), nullable=False),
        sa.Column("recommended", sa.Boolean(), nullable=False),
        sa.Column("project_ids", sa.JSON(), nullable=True),
        sa.Column("template_json", sa.JSON(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cracker_binarys",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "operating_system",
            sa.Enum("linux", "windows", "macos", "other", name="operatingsystemenum"),
            nullable=False,
        ),
        sa.Column("version", sa.String(length=32), nullable=False),
        sa.Column("download_url", sa.String(length=512), nullable=False),
        sa.Column("exec_name", sa.String(length=128), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_cracker_binarys_operating_system"),
        "cracker_binarys",
        ["operating_system"],
        unique=False,
    )
    op.create_table(
        "hash_items",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("hash", sa.String(length=512), nullable=False),
        sa.Column("salt", sa.String(length=512), nullable=True),
        sa.Column("meta", sa.JSON(), nullable=True),
        sa.Column("plain_text", sa.String(length=512), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("hash", "salt", name="uq_hashitem_hash_salt"),
    )
    op.create_table(
        "hash_types",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("john_mode", sa.String(length=32), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "projects",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("description", sa.String(length=512), nullable=True),
        sa.Column("private", sa.Boolean(), nullable=False),
        sa.Column("archived_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("notes", sa.String(length=1024), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_projects_name"), "projects", ["name"], unique=True)
    op.create_table(
        "upload_resource_files",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=True),
        sa.Column("file_name", sa.String(length=255), nullable=False),
        sa.Column("download_url", sa.String(length=1024), nullable=False),
        sa.Column("checksum", sa.String(length=64), nullable=False),
        sa.Column("guid", sa.Uuid(), nullable=False),
        sa.Column("line_encoding", sa.String(length=16), nullable=False),
        sa.Column("source", sa.String(length=32), nullable=False),
        sa.Column("line_count", sa.Integer(), nullable=False),
        sa.Column("byte_size", sa.Integer(), nullable=False),
        sa.Column("content", sa.JSON(), nullable=True),
        sa.Column("is_uploaded", sa.Boolean(), nullable=False),
        sa.Column("file_label", sa.String(length=50), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("guid"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("email", sa.String(length=128), nullable=False),
        sa.Column("hashed_password", sa.String(length=128), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column(
            "role",
            sa.Enum("ADMIN", "ANALYST", "OPERATOR", name="userrole"),
            nullable=False,
        ),
        sa.Column("sign_in_count", sa.Integer(), nullable=False),
        sa.Column("current_sign_in_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("last_sign_in_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("current_sign_in_ip", sa.String(length=45), nullable=True),
        sa.Column("last_sign_in_ip", sa.String(length=45), nullable=True),
        sa.Column("reset_password_token", sa.String(length=128), nullable=True),
        sa.Column("unlock_token", sa.String(length=128), nullable=True),
        sa.Column("failed_attempts", sa.Integer(), nullable=False),
        sa.Column("totp_secret", sa.String(length=64), nullable=True),
        sa.Column("api_key", sa.String(length=128), nullable=True),
        sa.Column("api_key_created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_api_key"), "users", ["api_key"], unique=True)
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_name"), "users", ["name"], unique=True)
    op.create_index(
        op.f("ix_users_reset_password_token"),
        "users",
        ["reset_password_token"],
        unique=True,
    )
    op.create_table(
        "agents",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("client_signature", sa.String(length=128), nullable=False),
        sa.Column("host_name", sa.String(length=128), nullable=False),
        sa.Column("custom_label", sa.String(length=128), nullable=True),
        sa.Column("token", sa.String(length=128), nullable=False),
        sa.Column("last_seen_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("last_ipaddress", sa.String(length=45), nullable=True),
        sa.Column(
            "state",
            sa.Enum("pending", "active", "stopped", "error", name="agentstate"),
            nullable=False,
        ),
        sa.Column("enabled", sa.Boolean(), nullable=False),
        sa.Column("advanced_configuration", sa.JSON(), nullable=True),
        sa.Column("devices", sa.JSON(), nullable=True),
        sa.Column(
            "agent_type",
            sa.Enum("physical", "virtual", "container", name="agenttype"),
            nullable=True,
        ),
        sa.Column(
            "operating_system",
            sa.Enum("linux", "windows", "macos", "other", name="operatingsystemenum"),
            nullable=False,
        ),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_agent_custom_label", "agents", ["custom_label"], unique=True)
    op.create_index("ix_agent_state", "agents", ["state"], unique=False)
    op.create_index("ix_agent_token", "agents", ["token"], unique=True)
    op.create_index(
        op.f("ix_agents_custom_label"), "agents", ["custom_label"], unique=True
    )
    op.create_index(op.f("ix_agents_state"), "agents", ["state"], unique=False)
    op.create_index(op.f("ix_agents_token"), "agents", ["token"], unique=True)
    op.create_table(
        "hash_lists",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("description", sa.String(length=512), nullable=True),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("hash_type_id", sa.Integer(), nullable=False),
        sa.Column("is_unavailable", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["hash_type_id"],
            ["hash_types.id"],
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_hash_lists_hash_type_id"), "hash_lists", ["hash_type_id"], unique=False
    )
    op.create_index(op.f("ix_hash_lists_name"), "hash_lists", ["name"], unique=False)
    op.create_index(
        op.f("ix_hash_lists_project_id"), "hash_lists", ["project_id"], unique=False
    )
    op.create_table(
        "project_user_associations",
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column(
            "role", sa.Enum("member", "admin", name="projectuserrole"), nullable=False
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("project_id", "user_id"),
    )
    op.create_table(
        "agent_device_performances",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("agent_id", sa.Integer(), nullable=False),
        sa.Column("device_name", sa.String(length=128), nullable=False),
        sa.Column("timestamp", sa.DateTime(timezone=True), nullable=False),
        sa.Column("speed", sa.Float(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["agent_id"],
            ["agents.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_agent_device_performances_agent_id"),
        "agent_device_performances",
        ["agent_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_agent_device_performances_timestamp"),
        "agent_device_performances",
        ["timestamp"],
        unique=False,
    )
    op.create_index(
        "ix_agent_device_time",
        "agent_device_performances",
        ["agent_id", "device_name", "timestamp"],
        unique=False,
    )
    op.create_table(
        "campaigns",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("description", sa.String(length=512), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("hash_list_id", sa.Integer(), nullable=False),
        sa.Column("is_unavailable", sa.Boolean(), nullable=False),
        sa.Column(
            "state",
            sa.Enum(
                "DRAFT",
                "ACTIVE",
                "ARCHIVED",
                "PAUSED",
                "COMPLETED",
                "ERROR",
                name="campaignstate",
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["hash_list_id"],
            ["hash_lists.id"],
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_campaigns_hash_list_id"), "campaigns", ["hash_list_id"], unique=False
    )
    op.create_index(op.f("ix_campaigns_name"), "campaigns", ["name"], unique=False)
    op.create_index(
        op.f("ix_campaigns_project_id"), "campaigns", ["project_id"], unique=False
    )
    op.create_index(op.f("ix_campaigns_state"), "campaigns", ["state"], unique=False)
    op.create_table(
        "hash_list_items",
        sa.Column("hash_list_id", sa.Integer(), nullable=False),
        sa.Column("hash_item_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["hash_item_id"],
            ["hash_items.id"],
        ),
        sa.ForeignKeyConstraint(
            ["hash_list_id"],
            ["hash_lists.id"],
        ),
        sa.PrimaryKeyConstraint("hash_list_id", "hash_item_id"),
    )
    op.create_table(
        "hashcat_benchmarks",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("agent_id", sa.Integer(), nullable=False),
        sa.Column("hash_type_id", sa.Integer(), nullable=False),
        sa.Column("runtime", sa.Integer(), nullable=False),
        sa.Column("hash_speed", sa.Float(), nullable=False),
        sa.Column("device", sa.String(length=128), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["agent_id"],
            ["agents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["hash_type_id"],
            ["hash_types.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_hashcat_benchmarks_agent_id"),
        "hashcat_benchmarks",
        ["agent_id"],
        unique=False,
    )
    op.create_table(
        "project_agents",
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("agent_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["agent_id"],
            ["agents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("project_id", "agent_id"),
    )
    op.create_table(
        "attacks",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "attack_mode",
            sa.Enum(
                "DICTIONARY",
                "MASK",
                "HYBRID_DICTIONARY",
                "HYBRID_MASK",
                name="attackmode",
            ),
            nullable=False,
        ),
        sa.Column("attack_mode_hashcat", sa.Integer(), nullable=False),
        sa.Column("hash_mode", sa.Integer(), nullable=False),
        sa.Column("mask", sa.String(length=255), nullable=True),
        sa.Column("increment_mode", sa.Boolean(), nullable=False),
        sa.Column("increment_minimum", sa.Integer(), nullable=False),
        sa.Column("increment_maximum", sa.Integer(), nullable=False),
        sa.Column("optimized", sa.Boolean(), nullable=False),
        sa.Column("slow_candidate_generators", sa.Boolean(), nullable=False),
        sa.Column("workload_profile", sa.Integer(), nullable=False),
        sa.Column("disable_markov", sa.Boolean(), nullable=False),
        sa.Column("classic_markov", sa.Boolean(), nullable=False),
        sa.Column("markov_threshold", sa.Integer(), nullable=False),
        sa.Column("left_rule", sa.String(length=255), nullable=True),
        sa.Column("right_rule", sa.String(length=255), nullable=True),
        sa.Column("custom_charset_1", sa.String(length=255), nullable=True),
        sa.Column("custom_charset_2", sa.String(length=255), nullable=True),
        sa.Column("custom_charset_3", sa.String(length=255), nullable=True),
        sa.Column("custom_charset_4", sa.String(length=255), nullable=True),
        sa.Column("hash_list_id", sa.Integer(), nullable=False),
        sa.Column("word_list_id", sa.Uuid(), nullable=True),
        sa.Column("rule_list_id", sa.Uuid(), nullable=True),
        sa.Column("mask_list_id", sa.Uuid(), nullable=True),
        sa.Column("charset_id", sa.Uuid(), nullable=True),
        sa.Column("hash_list_url", sa.String(length=1024), nullable=False),
        sa.Column("hash_list_checksum", sa.String(length=64), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("description", sa.String(length=1024), nullable=True),
        sa.Column(
            "state",
            sa.Enum(
                "PENDING",
                "RUNNING",
                "COMPLETED",
                "FAILED",
                "ABANDONED",
                name="attackstate",
            ),
            nullable=False,
        ),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("position", sa.Integer(), nullable=False),
        sa.Column("complexity_score", sa.Integer(), nullable=True),
        sa.Column("start_time", sa.DateTime(timezone=True), nullable=True),
        sa.Column("end_time", sa.DateTime(timezone=True), nullable=True),
        sa.Column("campaign_id", sa.Integer(), nullable=False),
        sa.Column("template_id", sa.Integer(), nullable=True),
        sa.Column("modifiers", sa.JSON(), nullable=True),
        sa.Column(
            "wordlist_source",
            sa.Enum("EXISTING", "PREVIOUS_PASSWORDS", name="wordlistsource"),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["campaign_id"],
            ["campaigns.id"],
        ),
        sa.ForeignKeyConstraint(
            ["charset_id"],
            ["attack_resource_files.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mask_list_id"],
            ["attack_resource_files.id"],
        ),
        sa.ForeignKeyConstraint(
            ["rule_list_id"],
            ["attack_resource_files.id"],
        ),
        sa.ForeignKeyConstraint(
            ["template_id"],
            ["attacks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["word_list_id"],
            ["attack_resource_files.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_attacks_campaign_id"), "attacks", ["campaign_id"], unique=False
    )
    op.create_index(op.f("ix_attacks_name"), "attacks", ["name"], unique=False)
    op.create_index(op.f("ix_attacks_position"), "attacks", ["position"], unique=False)
    op.create_index(op.f("ix_attacks_state"), "attacks", ["state"], unique=False)
    op.create_table(
        "hash_upload_tasks",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("filename", sa.String(length=255), nullable=False),
        sa.Column("status", sa.String(length=32), nullable=False),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("finished_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("error_count", sa.Integer(), nullable=False),
        sa.Column("hash_list_id", sa.Integer(), nullable=True),
        sa.Column("campaign_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["campaign_id"],
            ["campaigns.id"],
        ),
        sa.ForeignKeyConstraint(
            ["hash_list_id"],
            ["hash_lists.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_hash_upload_tasks_status"),
        "hash_upload_tasks",
        ["status"],
        unique=False,
    )
    op.create_index(
        op.f("ix_hash_upload_tasks_user_id"),
        "hash_upload_tasks",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "crack_results",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("agent_id", sa.Integer(), nullable=False),
        sa.Column("attack_id", sa.Integer(), nullable=False),
        sa.Column("hash_item_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["agent_id"],
            ["agents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["attack_id"],
            ["attacks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["hash_item_id"],
            ["hash_items.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_crack_results_agent_id"), "crack_results", ["agent_id"], unique=False
    )
    op.create_index(
        op.f("ix_crack_results_attack_id"), "crack_results", ["attack_id"], unique=False
    )
    op.create_index(
        op.f("ix_crack_results_hash_item_id"),
        "crack_results",
        ["hash_item_id"],
        unique=False,
    )
    op.create_table(
        "tasks",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("attack_id", sa.Integer(), nullable=False),
        sa.Column("agent_id", sa.Integer(), nullable=True),
        sa.Column("start_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "RUNNING",
                "PAUSED",
                "COMPLETED",
                "FAILED",
                "ABANDONED",
                name="taskstatus",
            ),
            nullable=False,
        ),
        sa.Column("skip", sa.Integer(), nullable=True),
        sa.Column("limit", sa.Integer(), nullable=True),
        sa.Column("retry_count", sa.Integer(), server_default="0", nullable=False),
        sa.Column("error_message", sa.String(length=1024), nullable=True),
        sa.Column(
            "error_details", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("progress", sa.Float(), nullable=True),
        sa.Column("estimated_completion", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["agent_id"],
            ["agents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["attack_id"],
            ["attacks.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "upload_error_entrys",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("upload_id", sa.Integer(), nullable=False),
        sa.Column("line_number", sa.Integer(), nullable=True),
        sa.Column("raw_line", sa.String(length=1024), nullable=False),
        sa.Column("error_message", sa.String(length=512), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["upload_id"],
            ["hash_upload_tasks.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_upload_error_entrys_upload_id"),
        "upload_error_entrys",
        ["upload_id"],
        unique=False,
    )
    op.create_table(
        "agent_errors",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("message", sa.String(length=512), nullable=False),
        sa.Column(
            "severity",
            sa.Enum(
                "info",
                "warning",
                "minor",
                "major",
                "critical",
                "fatal",
                name="severity",
            ),
            nullable=False,
        ),
        sa.Column("error_code", sa.String(length=64), nullable=True),
        sa.Column("details", sa.JSON(), nullable=True),
        sa.Column("agent_id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["agent_id"],
            ["agents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["tasks.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_agent_error_agent_id", "agent_errors", ["agent_id"], unique=False
    )
    op.create_index("ix_agent_error_task_id", "agent_errors", ["task_id"], unique=False)
    op.create_index(
        op.f("ix_agent_errors_agent_id"), "agent_errors", ["agent_id"], unique=False
    )
    op.create_index(
        op.f("ix_agent_errors_task_id"), "agent_errors", ["task_id"], unique=False
    )
    op.create_table(
        "hashcat_results",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("timestamp", sa.DateTime(timezone=True), nullable=False),
        sa.Column("hash", sa.String(length=512), nullable=False),
        sa.Column("plain_text", sa.String(length=512), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["tasks.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_hashcat_results_task_id"), "hashcat_results", ["task_id"], unique=False
    )
    op.create_table(
        "raw_hashs",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("hash", sa.String(length=512), nullable=False),
        sa.Column("hash_type_id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=255), nullable=True),
        sa.Column("meta", sa.JSON(), nullable=True),
        sa.Column("line_number", sa.Integer(), nullable=False),
        sa.Column("upload_error_entry_id", sa.Integer(), nullable=True),
        sa.Column("upload_task_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["hash_type_id"],
            ["hash_types.id"],
        ),
        sa.ForeignKeyConstraint(
            ["upload_error_entry_id"],
            ["upload_error_entrys.id"],
        ),
        sa.ForeignKeyConstraint(
            ["upload_task_id"],
            ["hash_upload_tasks.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "task_status_updates",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("original_line", sa.String(length=1024), nullable=False),
        sa.Column("time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("session", sa.String(length=128), nullable=False),
        sa.Column("status", sa.Integer(), nullable=False),
        sa.Column("target", sa.String(length=256), nullable=False),
        sa.Column("progress", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("restore_point", sa.Integer(), nullable=False),
        sa.Column(
            "recovered_hashes", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column(
            "recovered_salts", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("rejected", sa.Integer(), nullable=False),
        sa.Column("time_start", sa.DateTime(timezone=True), nullable=False),
        sa.Column("estimated_stop", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["tasks.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_task_status_updates_task_id"),
        "task_status_updates",
        ["task_id"],
        unique=False,
    )
    op.create_table(
        "device_statuss",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("status_update_id", sa.Integer(), nullable=False),
        sa.Column("device_id", sa.Integer(), nullable=False),
        sa.Column("device_name", sa.String(length=128), nullable=False),
        sa.Column("device_type", sa.String(length=16), nullable=False),
        sa.Column("speed", sa.Integer(), nullable=False),
        sa.Column("utilization", sa.Integer(), nullable=False),
        sa.Column("temperature", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["status_update_id"],
            ["task_status_updates.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_device_statuss_status_update_id"),
        "device_statuss",
        ["status_update_id"],
        unique=False,
    )
    op.create_table(
        "hashcat_guesss",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("status_update_id", sa.Integer(), nullable=False),
        sa.Column("guess_base", sa.String(length=256), nullable=False),
        sa.Column("guess_base_count", sa.Integer(), nullable=False),
        sa.Column("guess_base_offset", sa.Integer(), nullable=False),
        sa.Column("guess_base_percentage", sa.Float(), nullable=False),
        sa.Column("guess_mod", sa.String(length=256), nullable=False),
        sa.Column("guess_mod_count", sa.Integer(), nullable=False),
        sa.Column("guess_mod_offset", sa.Integer(), nullable=False),
        sa.Column("guess_mod_percentage", sa.Float(), nullable=False),
        sa.Column("guess_mode", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["status_update_id"],
            ["task_status_updates.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_hashcat_guesss_status_update_id"),
        "hashcat_guesss",
        ["status_update_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_hashcat_guesss_status_update_id"), table_name="hashcat_guesss"
    )
    op.drop_table("hashcat_guesss")
    op.drop_index(
        op.f("ix_device_statuss_status_update_id"), table_name="device_statuss"
    )
    op.drop_table("device_statuss")
    op.drop_index(
        op.f("ix_task_status_updates_task_id"), table_name="task_status_updates"
    )
    op.drop_table("task_status_updates")
    op.drop_table("raw_hashs")
    op.drop_index(op.f("ix_hashcat_results_task_id"), table_name="hashcat_results")
    op.drop_table("hashcat_results")
    op.drop_index(op.f("ix_agent_errors_task_id"), table_name="agent_errors")
    op.drop_index(op.f("ix_agent_errors_agent_id"), table_name="agent_errors")
    op.drop_index("ix_agent_error_task_id", table_name="agent_errors")
    op.drop_index("ix_agent_error_agent_id", table_name="agent_errors")
    op.drop_table("agent_errors")
    op.drop_index(
        op.f("ix_upload_error_entrys_upload_id"), table_name="upload_error_entrys"
    )
    op.drop_table("upload_error_entrys")
    op.drop_table("tasks")
    op.drop_index(op.f("ix_crack_results_hash_item_id"), table_name="crack_results")
    op.drop_index(op.f("ix_crack_results_attack_id"), table_name="crack_results")
    op.drop_index(op.f("ix_crack_results_agent_id"), table_name="crack_results")
    op.drop_table("crack_results")
    op.drop_index(op.f("ix_hash_upload_tasks_user_id"), table_name="hash_upload_tasks")
    op.drop_index(op.f("ix_hash_upload_tasks_status"), table_name="hash_upload_tasks")
    op.drop_table("hash_upload_tasks")
    op.drop_index(op.f("ix_attacks_state"), table_name="attacks")
    op.drop_index(op.f("ix_attacks_position"), table_name="attacks")
    op.drop_index(op.f("ix_attacks_name"), table_name="attacks")
    op.drop_index(op.f("ix_attacks_campaign_id"), table_name="attacks")
    op.drop_table("attacks")
    op.drop_table("project_agents")
    op.drop_index(
        op.f("ix_hashcat_benchmarks_agent_id"), table_name="hashcat_benchmarks"
    )
    op.drop_table("hashcat_benchmarks")
    op.drop_table("hash_list_items")
    op.drop_index(op.f("ix_campaigns_state"), table_name="campaigns")
    op.drop_index(op.f("ix_campaigns_project_id"), table_name="campaigns")
    op.drop_index(op.f("ix_campaigns_name"), table_name="campaigns")
    op.drop_index(op.f("ix_campaigns_hash_list_id"), table_name="campaigns")
    op.drop_table("campaigns")
    op.drop_index("ix_agent_device_time", table_name="agent_device_performances")
    op.drop_index(
        op.f("ix_agent_device_performances_timestamp"),
        table_name="agent_device_performances",
    )
    op.drop_index(
        op.f("ix_agent_device_performances_agent_id"),
        table_name="agent_device_performances",
    )
    op.drop_table("agent_device_performances")
    op.drop_table("project_user_associations")
    op.drop_index(op.f("ix_hash_lists_project_id"), table_name="hash_lists")
    op.drop_index(op.f("ix_hash_lists_name"), table_name="hash_lists")
    op.drop_index(op.f("ix_hash_lists_hash_type_id"), table_name="hash_lists")
    op.drop_table("hash_lists")
    op.drop_index(op.f("ix_agents_token"), table_name="agents")
    op.drop_index(op.f("ix_agents_state"), table_name="agents")
    op.drop_index(op.f("ix_agents_custom_label"), table_name="agents")
    op.drop_index("ix_agent_token", table_name="agents")
    op.drop_index("ix_agent_state", table_name="agents")
    op.drop_index("ix_agent_custom_label", table_name="agents")
    op.drop_table("agents")
    op.drop_index(op.f("ix_users_reset_password_token"), table_name="users")
    op.drop_index(op.f("ix_users_name"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_index(op.f("ix_users_api_key"), table_name="users")
    op.drop_table("users")
    op.drop_table("upload_resource_files")
    op.drop_index(op.f("ix_projects_name"), table_name="projects")
    op.drop_table("projects")
    op.drop_table("hash_types")
    op.drop_table("hash_items")
    op.drop_index(
        op.f("ix_cracker_binarys_operating_system"), table_name="cracker_binarys"
    )
    op.drop_table("cracker_binarys")
    op.drop_table("attack_template_records")
    op.drop_table("attack_resource_files")
    # ### end Alembic commands ###
