from datetime import datetime

from sqlalchemy import JSON, Boolean, DateTime, Integer, String
from sqlalchemy.orm import Mapped, mapped_column

from app.models.base import Base


class AttackTemplateRecord(Base):
    # __tablename__ is auto-generated by Base

    id: Mapped[int] = mapped_column(Integer, primary_key=True, autoincrement=True)
    name: Mapped[str] = mapped_column(String(128), nullable=False)
    description: Mapped[str | None] = mapped_column(String(512), nullable=True)
    attack_mode: Mapped[str] = mapped_column(String(32), nullable=False)
    recommended: Mapped[bool] = mapped_column(Boolean, default=False, nullable=False)
    # Project-scoped: null means global, otherwise a list of project IDs (JSON array)
    project_ids: Mapped[list[int] | None] = mapped_column(
        JSON, nullable=True, default=None
    )
    template_json: Mapped[dict[str, object]] = mapped_column(JSON, nullable=False)
    created_at: Mapped[datetime] = mapped_column(
        DateTime(timezone=True), default=datetime.now, nullable=False
    )
    # updated_at inherited from Base
