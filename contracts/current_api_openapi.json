{
  "openapi": "3.1.0",
  "info": {
    "title": "CipherSwarm",
    "description": "The CipherSwarm Agent API is used to allow agents to connect to the CipherSwarm server.",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "summary": "Login",
        "operationId": "login_api_v1_auth_login_post",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Login Api V1 Auth Login Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/jwt/login": {
      "post": {
        "summary": "Jwt Login",
        "operationId": "jwt_login_api_v1_auth_jwt_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_jwt_login_api_v1_auth_jwt_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Jwt Login Api V1 Auth Jwt Login Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/configuration": {
      "get": {
        "tags": [
          "Agents",
          "Client"
        ],
        "summary": "Get Agent Configuration",
        "description": "Returns the configuration for the agent. This is used to get the configuration for the agent that has been set by the administrator on the server. The configuration is stored in the database and can be updated by the administrator on the server and is global, but specific to the individual agent. Client should cache the configuration and only request a new configuration if the agent is restarted or if the configuration has changed.",
        "operationId": "get_agent_configuration_v1_api_v1_client_configuration_get",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentConfigurationResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "Agent not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/authenticate": {
      "get": {
        "tags": [
          "Agents",
          "Client"
        ],
        "summary": "Authenticate Client",
        "description": "Authenticates the client. This is used to verify that the client is able to connect to the server.",
        "operationId": "authenticate_agent_v1_api_v1_client_authenticate_get",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentAuthenticateResponse"
                },
                "example": {
                  "authenticated": true,
                  "agent_id": 2624
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "Bad credentials"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/agents/{id}": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Get agent by ID",
        "description": "Get agent by ID. Requires agent authentication.",
        "operationId": "get_agent_api_v1_client_agents__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponseV1"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Agents"
        ],
        "summary": "Update agent",
        "description": "Update agent. Requires agent authentication.",
        "operationId": "update_agent_api_v1_client_agents__id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentUpdateV1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponseV1"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/agents/{id}/submit_benchmark": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Submit agent benchmark results",
        "description": "Submit agent benchmark results. Requires agent authentication.",
        "operationId": "submit_benchmark_api_v1_client_agents__id__submit_benchmark_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentBenchmark"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/agents/{id}/submit_error": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Submit agent error",
        "description": "Submit agent error. Requires agent authentication.",
        "operationId": "submit_error_api_v1_client_agents__id__submit_error_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentErrorV1"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/agents/{id}/shutdown": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Shutdown agent",
        "description": "Shutdown agent. Requires agent authentication.",
        "operationId": "shutdown_agent_api_v1_client_agents__id__shutdown_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/agents/{id}/heartbeat": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Agent heartbeat (contract)",
        "description": "Agent sends a heartbeat to update its status and last seen timestamp. Contract-compliant endpoint.",
        "operationId": "agent_heartbeat_contract_api_v1_client_agents__id__heartbeat_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentHeartbeatRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/attacks/{id}": {
      "get": {
        "tags": [
          "Attacks",
          "Attacks"
        ],
        "summary": "Get attack by ID (v1 agent API)",
        "description": "Returns an attack by id. This is used to get the details of an attack.",
        "operationId": "get_attack_v1_api_v1_client_attacks__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttackOutV1"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/attacks/{id}/hash_list": {
      "get": {
        "tags": [
          "Attacks",
          "Attacks"
        ],
        "summary": "Get the hash list for an attack (v1 agent API)",
        "description": "Returns the hash list for an attack as a text file. Each line is a hash value. Requires agent authentication.",
        "operationId": "get_attack_hash_list_v1_api_v1_client_attacks__id__hash_list_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Record not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/tasks/{id}/progress": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Update task progress (v1 compatibility)",
        "description": "Agents send progress updates for a task. Compatibility layer for v1 API.",
        "operationId": "update_task_progress_v1_api_v1_client_tasks__id__progress_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskProgressUpdate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/tasks/{id}/submit_status": {
      "post": {
        "tags": [
          "Tasks",
          "Tasks"
        ],
        "summary": "Submit a status update for a task (v1 agent API)",
        "description": "Submit a status update for a running task. This is the main status heartbeat endpoint for agents.",
        "operationId": "submit_task_status_v1_api_v1_client_tasks__id__submit_status_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskStatusUpdate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "status received successfully"
          },
          "202": {
            "description": "status received successfully, but stale"
          },
          "410": {
            "description": "status received successfully, but task paused"
          },
          "422": {
            "description": "malformed status data"
          },
          "404": {
            "description": "Task not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Task not running"
          }
        }
      }
    },
    "/api/v1/client/tasks/{id}": {
      "get": {
        "tags": [
          "Tasks",
          "Tasks"
        ],
        "summary": "Request the task information (v1 agent API)",
        "description": "Request the task information from the server. Requires agent authentication and assignment.",
        "operationId": "get_task_v1_api_v1_client_tasks__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskOutV1"
                }
              }
            }
          },
          "404": {
            "description": "Task not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/tasks/{id}/accept_task": {
      "post": {
        "tags": [
          "Tasks",
          "Tasks"
        ],
        "summary": "Accept Task (v1 agent API)",
        "description": "Accept an offered task from the server. Sets the task status to running and assigns it to the agent.",
        "operationId": "accept_task_v1_api_v1_client_tasks__id__accept_task_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "task accepted successfully"
          },
          "422": {
            "description": "task already completed"
          },
          "404": {
            "description": "task not found for agent"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/client/tasks/{id}/exhausted": {
      "post": {
        "tags": [
          "Tasks",
          "Tasks"
        ],
        "summary": "Notify of Exhausted Task (v1 agent API)",
        "description": "Notify the server that the task is exhausted. This will mark the task as completed.",
        "operationId": "exhaust_task_v1_api_v1_client_tasks__id__exhausted_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful"
          },
          "404": {
            "description": "Task not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Task already completed or exhausted"
          }
        }
      }
    },
    "/api/v1/client/tasks/{id}/abandon": {
      "post": {
        "tags": [
          "Tasks",
          "Tasks"
        ],
        "summary": "Abandon Task (v1 agent API)",
        "description": "Abandon a task. This will mark the task as abandoned. Usually used when the client is unable to complete the task.",
        "operationId": "abandon_task_v1_api_v1_client_tasks__id__abandon_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful"
          },
          "422": {
            "description": "already completed",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/client/tasks/{id}/get_zaps": {
      "get": {
        "tags": [
          "Tasks",
          "Tasks"
        ],
        "summary": "Get Completed Hashes (v1 agent API)",
        "description": "Gets the completed hashes for a task. This is a text file that should be added to the monitored directory to remove the hashes from the list during runtime.",
        "operationId": "get_task_zaps_v1_api_v1_client_tasks__id__get_zaps_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "already completed"
          },
          "404": {
            "description": "Task not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/client/tasks/new": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Request a new task from server (v1 compatibility)",
        "description": "Request a new task from the server, if available. Compatibility layer for v1 API.",
        "operationId": "get_new_task_v1_api_v1_client_tasks_new_get",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/tasks/{id}/submit_crack": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Submit a cracked hash result for a task (v1 compatibility)",
        "description": "Submit a cracked hash result for a task. Compatibility layer for v1 API.",
        "operationId": "submit_cracked_hash_v1_api_v1_client_tasks__id__submit_crack_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HashcatResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/crackers/check_for_cracker_update": {
      "get": {
        "tags": [
          "Crackers",
          "Crackers"
        ],
        "summary": "Check for cracker update (v1 agent API)",
        "description": "Checks for an update to the cracker and returns update info if available.",
        "operationId": "check_for_cracker_update_v1_api_v1_client_crackers_check_for_cracker_update_get",
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Current cracker version (semver)",
              "title": "Version"
            },
            "description": "Current cracker version (semver)"
          },
          {
            "name": "operating_system",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Operating system (windows, linux, darwin)",
              "title": "Operating System"
            },
            "description": "Operating system (windows, linux, darwin)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrackerUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configuration": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get Agent Configuration (v1 agent API)",
        "description": "Returns the configuration for the agent. This is used to get the configuration for the agent that has been set by the administrator on the server. The configuration is stored in the database and can be updated by the administrator on the server and is global, but specific to the individual agent. Client should cache the configuration and only request a new configuration if the agent is restarted or if the configuration has changed.",
        "operationId": "get_agent_configuration_v1_api_v1_configuration_get",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentConfigurationResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "404": {
            "description": "Agent not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/authenticate": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Authenticate Client (v1 agent API)",
        "description": "Authenticates the client. This is used to verify that the client is able to connect to the server.",
        "operationId": "authenticate_agent_v1_api_v1_authenticate_get",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentAuthenticateResponse"
                },
                "example": {
                  "authenticated": true,
                  "agent_id": 2624
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "Bad credentials"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/attacks/editor-modal": {
      "get": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "Attack editor modal",
        "description": "Return the attack editor modal context for a new or imported attack.",
        "operationId": "attack_editor_modal_api_v1_web_attacks_editor_modal_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttackEditorContext"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/attacks/{attack_id}/move": {
      "post": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "Move attack within campaign",
        "description": "Reposition an attack within its campaign (up, down, top, bottom).",
        "operationId": "move_attack_api_v1_web_attacks__attack_id__move_post",
        "parameters": [
          {
            "name": "attack_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Attack Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttackMoveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttackEditorContext"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            },
            "description": "Not Found"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/attacks/{attack_id}/duplicate": {
      "post": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "Duplicate attack in-place",
        "description": "Clone an attack in-place and insert the copy at the end of the campaign's attack list.",
        "operationId": "duplicate_attack_api_v1_web_attacks__attack_id__duplicate_post",
        "parameters": [
          {
            "name": "attack_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Attack Id"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttackOut"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/attacks/bulk": {
      "delete": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "Bulk delete attacks",
        "description": "Delete multiple attacks by their IDs in a single request.",
        "operationId": "bulk_delete_attacks_api_v1_web_attacks_bulk_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttackBulkDeleteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "object",
                  "title": "Response Bulk Delete Attacks Api V1 Web Attacks Bulk Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/attacks/estimate": {
      "post": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "Estimate keyspace and complexity for unsaved attack config",
        "description": "Return keyspace and complexity score for the given attack config (unsaved).",
        "operationId": "estimate_attack_api_v1_web_attacks_estimate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimateAttackRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Estimate Attack Api V1 Web Attacks Estimate Post"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/attacks/{attack_id}/export": {
      "get": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "Export attack as JSON",
        "description": "Export a single attack as a JSON file using the AttackTemplate schema.",
        "operationId": "export_attack_json_api_v1_web_attacks__attack_id__export_get",
        "parameters": [
          {
            "name": "attack_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Attack Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/attacks/import_json": {
      "post": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "Import attack from JSON",
        "description": "Import an attack from a JSON file or payload and prefill the attack editor modal.",
        "operationId": "import_attack_json_api_v1_web_attacks_import_json_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Import Attack Json Api V1 Web Attacks Import Json Post"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/attacks/validate": {
      "post": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "Validate attack configuration (dry-run)",
        "description": "Validate an attack config and return either errors or a keyspace/complexity summary as JSON.",
        "operationId": "validate_attack_api_v1_web_attacks_validate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Validate Attack Api V1 Web Attacks Validate Post"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/attacks": {
      "post": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "Create a new attack",
        "description": "Create a new attack, supporting ephemeral mask lists via masks_inline.",
        "operationId": "create_attack_api_v1_web_attacks_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttackCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttackOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "List Attacks",
        "description": "Returns a paginated, searchable list of attacks as JSON for the SvelteKit dashboard.",
        "operationId": "list_attacks_api_v1_web_attacks_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Size"
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search query for attack name/description",
              "title": "Q"
            },
            "description": "Search query for attack name/description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Attacks Api V1 Web Attacks Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/attacks/attack_table_body": {
      "get": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "Attack table body fragment",
        "description": "Returns the attack list for the campaign as AttackSummary objects.",
        "operationId": "attack_table_body_fragment_api_v1_web_attacks_attack_table_body_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Size"
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search query for attack name/description",
              "title": "Q"
            },
            "description": "Search query for attack name/description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttackSummary"
                  },
                  "title": "Response Attack Table Body Fragment Api V1 Web Attacks Attack Table Body Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/attacks/{attack_id}": {
      "get": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "Get attack by ID",
        "description": "Get a single attack by its ID as JSON.",
        "operationId": "get_attack_api_v1_web_attacks__attack_id__get",
        "parameters": [
          {
            "name": "attack_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Attack Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttackOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "Delete attack",
        "description": "Delete an attack by ID. If not started, deletes from DB. If started, marks as abandoned and stops tasks. Cleans up ephemeral resources.",
        "operationId": "delete_attack_api_v1_web_attacks__attack_id__delete",
        "parameters": [
          {
            "name": "attack_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Attack Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "title": "Response Delete Attack Api V1 Web Attacks  Attack Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "Edit attack configuration",
        "description": "Edit an attack. If the attack is running or completed, require confirmation before resetting to pending and applying changes.",
        "operationId": "edit_attack_api_v1_web_attacks__attack_id__patch",
        "parameters": [
          {
            "name": "attack_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Attack Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttackUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Edit Attack Api V1 Web Attacks  Attack Id  Patch"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/attacks/brute_force_mask": {
      "post": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "Generate brute force mask and custom charset",
        "description": "Given charset options and length, return the mask and custom charset string for brute force attacks.",
        "operationId": "brute_force_mask_api_v1_web_attacks_brute_force_mask_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BruteForceMaskRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BruteForceMaskResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/attacks/{attack_id}/performance": {
      "get": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "Attack performance summary",
        "description": "Return an AttackPerformanceSummary object with hashes/sec, total hashes, agent count, and ETA for the attack.",
        "operationId": "attack_performance_summary_api_v1_web_attacks__attack_id__performance_get",
        "parameters": [
          {
            "name": "attack_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Attack Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Attack Performance Summary Api V1 Web Attacks  Attack Id  Performance Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/attacks/{attack_id}/disable_live_updates": {
      "post": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "Toggle live updates for attack (UI only)",
        "description": "Enable or disable live updates for this attack for the current user. Returns a JSON object with enabled status.",
        "operationId": "disable_live_updates_api_v1_web_attacks__attack_id__disable_live_updates_post",
        "parameters": [
          {
            "name": "attack_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Attack Id"
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Enabled"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Disable Live Updates Api V1 Web Attacks  Attack Id  Disable Live Updates Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/attacks/{attack_id}/view-modal": {
      "get": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "View attack config and performance modal",
        "description": "Return a dict with attack config and performance for the dashboard view modal.",
        "operationId": "view_attack_modal_api_v1_web_attacks__attack_id__view_modal_get",
        "parameters": [
          {
            "name": "attack_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Attack Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/AttackOut"
                      },
                      {
                        "$ref": "#/components/schemas/AttackPerformanceSummary"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "title": "Response View Attack Modal Api V1 Web Attacks  Attack Id  View Modal Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/attacks/validate_mask": {
      "post": {
        "tags": [
          "Web",
          "Attacks"
        ],
        "summary": "Validate hashcat mask syntax",
        "description": "Validate a hashcat mask string for syntax correctness. Returns valid/error JSON.",
        "operationId": "validate_mask_api_v1_web_attacks_validate_mask_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaskValidationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaskValidationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/campaigns/{campaign_id}/reorder_attacks": {
      "post": {
        "tags": [
          "Web",
          "Campaigns"
        ],
        "summary": "Reorder attacks in a campaign",
        "description": "Accepts a list of attack IDs and updates their order (position) within the campaign.",
        "operationId": "reorder_attacks_api_v1_web_campaigns__campaign_id__reorder_attacks_post",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReorderAttacksRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReorderAttacksResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/campaigns/{campaign_id}/start": {
      "post": {
        "tags": [
          "Web",
          "Campaigns"
        ],
        "summary": "Start campaign",
        "description": "Set campaign state to active.",
        "operationId": "start_campaign_api_v1_web_campaigns__campaign_id__start_post",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/campaigns/{campaign_id}/stop": {
      "post": {
        "tags": [
          "Web",
          "Campaigns"
        ],
        "summary": "Stop campaign",
        "description": "Set campaign state to draft (stopped).",
        "operationId": "stop_campaign_api_v1_web_campaigns__campaign_id__stop_post",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/campaigns/{campaign_id}": {
      "get": {
        "tags": [
          "Web",
          "Campaigns"
        ],
        "summary": "Campaign detail view",
        "description": "Get campaign detail and attack summaries.",
        "operationId": "campaign_detail_api_v1_web_campaigns__campaign_id__get",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Web",
          "Campaigns"
        ],
        "summary": "Update campaign",
        "description": "Update campaign fields.",
        "operationId": "update_campaign_api_v1_web_campaigns__campaign_id__patch",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Web",
          "Campaigns"
        ],
        "summary": "Archive (soft-delete) campaign",
        "description": "Archive a campaign by setting its state to ARCHIVED.",
        "operationId": "archive_campaign_api_v1_web_campaigns__campaign_id__delete",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/campaigns": {
      "get": {
        "tags": [
          "Web",
          "Campaigns"
        ],
        "summary": "List campaigns",
        "description": "List campaigns with pagination and filtering.",
        "operationId": "list_campaigns_api_v1_web_campaigns_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Size"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Web",
          "Campaigns"
        ],
        "summary": "Create a new campaign",
        "description": "Create a new campaign.",
        "operationId": "create_campaign_api_v1_web_campaigns_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/campaigns/{campaign_id}/add_attack": {
      "post": {
        "tags": [
          "Web",
          "Campaigns"
        ],
        "summary": "Add attack to campaign",
        "description": "Create a new attack and attach it to the specified campaign.",
        "operationId": "add_attack_to_campaign_api_v1_web_campaigns__campaign_id__add_attack_post",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttackCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttackCampaignResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/campaigns/{campaign_id}/progress": {
      "get": {
        "tags": [
          "Web",
          "Campaigns"
        ],
        "summary": "Get campaign progress",
        "description": "Returns progress/status for the campaign.",
        "operationId": "campaign_progress_api_v1_web_campaigns__campaign_id__progress_get",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignProgress"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/campaigns/{campaign_id}/metrics": {
      "get": {
        "tags": [
          "Web",
          "Campaigns"
        ],
        "summary": "Get campaign metrics",
        "description": "Returns aggregate metrics for the campaign.",
        "operationId": "campaign_metrics_api_v1_web_campaigns__campaign_id__metrics_get",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignMetrics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/campaigns/{campaign_id}/relaunch": {
      "post": {
        "tags": [
          "Web",
          "Campaigns"
        ],
        "summary": "Relaunch failed or modified attacks in a campaign",
        "description": "Relaunches failed attacks or those with modified resources. Requires explicit confirmation.",
        "operationId": "relaunch_campaign_api_v1_web_campaigns__campaign_id__relaunch_post",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/campaigns/{campaign_id}/export": {
      "get": {
        "tags": [
          "Web",
          "Campaigns"
        ],
        "summary": "Export campaign as JSON",
        "description": "Export a single campaign as a JSON file using the CampaignTemplate schema.",
        "operationId": "export_campaign_json_api_v1_web_campaigns__campaign_id__export_get",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignTemplate-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/campaigns/import_json": {
      "post": {
        "tags": [
          "Web",
          "Campaigns"
        ],
        "summary": "Import campaign from JSON",
        "description": "Import a campaign from a JSON file or payload. Creates a new campaign based on the template and returns the campaign with its attacks, not persisted to the database.",
        "operationId": "import_campaign_json_api_v1_web_campaigns_import_json_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignTemplate-Input",
                "description": "Campaign template"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignWithAttacks"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/campaigns/{campaign_id}/attacks": {
      "get": {
        "tags": [
          "Web",
          "Campaigns"
        ],
        "summary": "Get attacks for a campaign",
        "description": "Returns the list of attacks associated with a campaign.",
        "operationId": "campaign_attacks_list_api_v1_web_campaigns__campaign_id__attacks_get",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttackSummary"
                  },
                  "title": "Response Campaign Attacks List Api V1 Web Campaigns  Campaign Id  Attacks Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/hash_guess": {
      "post": {
        "tags": [
          "Web",
          "Hash Guess"
        ],
        "summary": "Guess hash types from provided hash material",
        "description": "Accepts hash material and returns ranked hash type candidates for the Web UI.",
        "operationId": "guess_hash_types_web_api_v1_web_hash_guess_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__api__v1__endpoints__web__hash_guess__HashGuessRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HashGuessResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/projects/{project_id}": {
      "get": {
        "tags": [
          "Web",
          "Projects"
        ],
        "summary": "Get project info",
        "description": "Get a project by ID and return its details as JSON.",
        "operationId": "get_project_api_v1_web_projects__project_id__get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Project ID",
              "title": "Project Id"
            },
            "description": "Project ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectRead"
                }
              }
            }
          },
          "404": {
            "description": "Project not found"
          },
          "403": {
            "description": "Not authorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Web",
          "Projects"
        ],
        "summary": "Update project",
        "description": "Update a project by ID.",
        "operationId": "update_project_api_v1_web_projects__project_id__put",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Project ID",
              "title": "Project Id"
            },
            "description": "Project ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectRead"
                }
              }
            }
          },
          "404": {
            "description": "Project not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Web",
          "Projects"
        ],
        "summary": "Archive (soft delete) project",
        "description": "Archive a project by ID (soft delete). Only admins can archive projects. Sets archived_at timestamp.",
        "operationId": "delete_project_api_v1_web_projects__project_id__delete",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Project ID",
              "title": "Project Id"
            },
            "description": "Project ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Project not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Web",
          "Projects"
        ],
        "summary": "Update project (partial)",
        "description": "Update project fields (name, visibility, user assignment, etc). Admin-only. Returns updated project info as JSON.",
        "operationId": "patch_project_api_v1_web_projects__project_id__patch",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Project ID",
              "title": "Project Id"
            },
            "description": "Project ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectRead"
                }
              }
            }
          },
          "404": {
            "description": "Project not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/projects": {
      "post": {
        "tags": [
          "Web",
          "Projects"
        ],
        "summary": "Create project",
        "description": "Create a new project. Only admins can create projects.",
        "operationId": "create_project_api_v1_web_projects_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectRead"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create projects"
          },
          "422": {
            "description": "Validation error"
          }
        }
      },
      "get": {
        "tags": [
          "Web",
          "Projects"
        ],
        "summary": "List projects",
        "description": "List all projects with pagination and optional search.",
        "operationId": "list_projects_api_v1_web_projects_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Projects per page",
              "default": 20,
              "title": "Page Size"
            },
            "description": "Projects per page"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by name or description",
              "title": "Search"
            },
            "description": "Search by name or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListProjectsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/users": {
      "get": {
        "tags": [
          "Web",
          "Users"
        ],
        "summary": "List users",
        "description": "Admin-only: List users. Returns a paginated list of users.",
        "operationId": "list_users_api_v1_web_users_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Users per page",
              "default": 20,
              "title": "Page Size"
            },
            "description": "Users per page"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by name or email",
              "title": "Search"
            },
            "description": "Search by name or email"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUserList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Web",
          "Users"
        ],
        "summary": "Create a new user",
        "description": "Admin-only: Create a new user. Returns the created user.",
        "operationId": "create_user_api_v1_web_users_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/users/{user_id}": {
      "get": {
        "tags": [
          "Web",
          "Users"
        ],
        "summary": "View user detail",
        "description": "Admin-only: View user detail as an HTML fragment.",
        "operationId": "get_user_detail_api_v1_web_users__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Web",
          "Users"
        ],
        "summary": "Update user info or role",
        "description": "Admin-only: Update user info or role. Returns updated user detail fragment.",
        "operationId": "update_user_api_v1_web_users__user_id__patch",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Web",
          "Users"
        ],
        "summary": "Deactivate (soft delete) a user",
        "description": "Admin-only: Deactivate (soft delete) a user. Returns updated user detail fragment.",
        "operationId": "deactivate_user_api_v1_web_users__user_id__delete",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/resources/{resource_id}/content": {
      "get": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "Get raw editable text content for a resource",
        "description": "Return the raw text content for eligible resources (mask, rule, wordlist, charset). Enforces editability constraints.",
        "operationId": "get_resource_content_api_v1_web_resources__resource_id__content_get",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The resource ID to get the content for",
              "title": "Resource Id"
            },
            "description": "The resource ID to get the content for"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceContentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "Update resource content (inline edit)",
        "description": "Update the content of a resource (file-backed). Only allowed for editable, non-dynamic, non-oversize resources. Triggers metadata refresh.",
        "operationId": "update_resource_content_api_v1_web_resources__resource_id__content_patch",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The resource ID to update",
              "title": "Resource Id"
            },
            "description": "The resource ID to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_resource_content_api_v1_web_resources__resource_id__content_patch"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Updated resource content successfully"
          },
          "401": {
            "description": "Unauthorized: missing or invalid authentication"
          },
          "403": {
            "description": "Resource not editable or too large for in-browser editing"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/resources/wordlists": {
      "get": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "List all wordlist resources for dropdown",
        "description": "Return all wordlist resources, sorted by last modified, with search and entry count support.",
        "operationId": "list_wordlists_api_v1_web_resources_wordlists_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WordlistDropdownResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/resources/rulelists": {
      "get": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "List all rule list resources for dropdown",
        "description": "Return all rule list resources, sorted by last modified, with search and entry count support.",
        "operationId": "list_rulelists_api_v1_web_resources_rulelists_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RulelistDropdownResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/resources/{resource_id}/lines": {
      "get": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "List lines in a file-backed resource (paginated, optionally validated)",
        "description": "Return a paginated list of lines in the resource for in-browser editing. Supports ?validate=true for batch validation.",
        "operationId": "list_resource_lines_api_v1_web_resources__resource_id__lines_get",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Resource Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Page Size"
            }
          },
          {
            "name": "validate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Validate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceLinesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "Add a new line to a file-backed resource (204 No Content)",
        "description": "Add a new line to the resource. Returns 204 No Content on success, 422 JSON on validation error.",
        "operationId": "add_resource_line_api_v1_web_resources__resource_id__lines_post",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Resource Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_add_resource_line_api_v1_web_resources__resource_id__lines_post"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/resources/{resource_id}/lines/{line_id}": {
      "patch": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "Update a line in a file-backed resource (204 No Content)",
        "description": "Update an existing line in the resource. Returns 204 No Content on success, 422 JSON on validation error.",
        "operationId": "update_resource_line_api_v1_web_resources__resource_id__lines__line_id__patch",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Resource Id"
            }
          },
          {
            "name": "line_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Line Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_resource_line_api_v1_web_resources__resource_id__lines__line_id__patch"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "Delete a line from a file-backed resource (204 No Content)",
        "description": "Delete a line from the resource. Returns 204 No Content on success.",
        "operationId": "delete_resource_line_api_v1_web_resources__resource_id__lines__line_id__delete",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Resource Id"
            }
          },
          {
            "name": "line_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Line Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/resources/{resource_id}/lines/validate": {
      "get": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "Validate all lines in a file-backed resource (JSON, batch validation)",
        "description": "Return a JSON list of ResourceLineValidationError for all invalid lines in the resource. Returns 204 No Content if all lines are valid.",
        "operationId": "validate_resource_lines_api_v1_web_resources__resource_id__lines_validate_get",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Resource Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "additionalProperties": true
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Validate Resource Lines Api V1 Web Resources  Resource Id  Lines Validate Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/resources/": {
      "get": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "List all resources (paginated, filterable)",
        "description": "Return a paginated, filterable list of all resources for the resource browser.",
        "operationId": "list_resources_api_v1_web_resources__get",
        "parameters": [
          {
            "name": "resource_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AttackResourceType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource Type"
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Q"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25,
              "title": "Page Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "Upload metadata, request presigned upload URL",
        "description": "Create an AttackResourceFile DB record and return a presigned S3 upload URL. If upload fails, ensure no orphaned DB record remains.",
        "operationId": "upload_resource_metadata_api_v1_web_resources__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_resource_metadata_api_v1_web_resources__post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/resources/{resource_id}/uploaded": {
      "post": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "Verify resource upload and update metadata",
        "description": "Client notifies server that file was uploaded. Updates is_uploaded and refreshes size, line count, and checksum.",
        "operationId": "verify_resource_uploaded_api_v1_web_resources__resource_id__uploaded_post",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Resource ID to verify upload for",
              "title": "Resource Id"
            },
            "description": "Resource ID to verify upload for"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUploadedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/resources/{resource_id}/refresh_metadata": {
      "post": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "Refresh resource metadata (size, line count, checksum)",
        "description": "Re-fetch file stats from MinIO and update the resource metadata. Returns updated resource metadata.",
        "operationId": "refresh_resource_metadata_api_v1_web_resources__resource_id__refresh_metadata_post",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Resource ID to refresh metadata for",
              "title": "Resource Id"
            },
            "description": "Resource ID to refresh metadata for"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUploadedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/resources/audit/orphans": {
      "get": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "Audit orphaned resource files in S3/MinIO and DB (admin only)",
        "description": "Admin tool: Returns orphaned S3 objects (not referenced in DB) and orphaned DB records (no object in storage).",
        "operationId": "audit_orphan_resources_api_v1_web_resources_audit_orphans_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "type": "object",
                  "title": "Response Audit Orphan Resources Api V1 Web Resources Audit Orphans Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/resources/upload": {
      "get": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "Get resource upload form schema",
        "description": "Return JSON schema and constraints for the resource upload form, including allowed types and limits.",
        "operationId": "get_resource_upload_form_api_v1_web_resources_upload_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUploadFormSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/resources/{resource_id}": {
      "get": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "Get resource detail (metadata + linking)",
        "description": "Return resource metadata and all attacks using this resource.",
        "operationId": "get_resource_detail_api_v1_web_resources__resource_id__get",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Resource Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "Update resource metadata",
        "description": "Update resource metadata fields (file_name, file_label, project_id, source, unrestricted, tags). Returns updated resource.",
        "operationId": "update_resource_metadata_api_v1_web_resources__resource_id__patch",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Resource Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "Remove or disable resource (hard delete)",
        "description": "Hard delete: remove from DB and S3/MinIO if not linked to any attack. Returns 204 No Content. Returns 409 if linked.",
        "operationId": "delete_resource_api_v1_web_resources__resource_id__delete",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Resource Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/resources/{resource_id}/preview": {
      "get": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "Get a small content preview for a resource",
        "description": "Return the first few lines of the resource for preview purposes. Enforces project access.",
        "operationId": "get_resource_preview_api_v1_web_resources__resource_id__preview_get",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Resource Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourcePreviewResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/resources/{resource_id}/edit": {
      "get": {
        "tags": [
          "Web",
          "Resources"
        ],
        "summary": "Get resource metadata for editing",
        "description": "Return resource metadata for editing (for edit form population).",
        "operationId": "get_resource_edit_metadata_api_v1_web_resources__resource_id__edit_get",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Resource Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/live/campaigns": {
      "get": {
        "tags": [
          "Web"
        ],
        "summary": "Campaign Events Feed",
        "description": "Server-Sent Events feed for campaign/attack/task state changes.\n\nClients should listen for 'refresh' events and then fetch updated data\nfrom the appropriate campaign endpoints.",
        "operationId": "campaign_events_feed_api_v1_web_live_campaigns_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/web/live/agents": {
      "get": {
        "tags": [
          "Web"
        ],
        "summary": "Agent Events Feed",
        "description": "Server-Sent Events feed for agent status, performance, and error updates.\n\nClients should listen for 'refresh' events and then fetch updated data\nfrom the appropriate agent endpoints.",
        "operationId": "agent_events_feed_api_v1_web_live_agents_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/web/live/toasts": {
      "get": {
        "tags": [
          "Web"
        ],
        "summary": "Toast Events Feed",
        "description": "Server-Sent Events feed for toast notifications (new crack results, system alerts).\n\nClients should listen for events and display toast notifications in the UI.\nThe 'trigger' field contains the message to display.",
        "operationId": "toast_events_feed_api_v1_web_live_toasts_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/web/modals/rule_explanation": {
      "get": {
        "tags": [
          "Web",
          "Modals"
        ],
        "summary": "Get hashcat rule explanations",
        "description": "Returns a list of common hashcat rules and their explanations for UI display.",
        "operationId": "rule_explanation_modal_api_v1_web_modals_rule_explanation_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleExplanationList"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/modals/agents": {
      "get": {
        "tags": [
          "Web",
          "Modals"
        ],
        "summary": "Get agent dropdown list",
        "description": "Returns a list of agents with display_name and status for dropdowns. Any authenticated user may access.",
        "operationId": "agent_dropdown_modal_api_v1_web_modals_agents_get",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AgentState"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by agent state",
              "title": "State"
            },
            "description": "Filter by agent state"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by host name or label",
              "title": "Search"
            },
            "description": "Search by host name or label"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgentDropdownItem"
                  },
                  "title": "Response Agent Dropdown Modal Api V1 Web Modals Agents Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/modals/resources": {
      "get": {
        "tags": [
          "Web",
          "Modals"
        ],
        "summary": "Get resource dropdown list",
        "description": "Returns a list of resources for dropdown selectors, filtered by current project or unrestricted. Excludes ephemeral/dynamic types. Admins see all.",
        "operationId": "resource_dropdown_modal_api_v1_web_modals_resources_get",
        "parameters": [
          {
            "name": "resource_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AttackResourceType"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by resource type",
              "title": "Resource Type"
            },
            "description": "Filter by resource type"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by resource name",
              "title": "Q"
            },
            "description": "Search by resource name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourceDropdownItem"
                  },
                  "title": "Response Resource Dropdown Modal Api V1 Web Modals Resources Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/modals/hash_types": {
      "get": {
        "tags": [
          "Web",
          "Modals"
        ],
        "summary": "Get hash type dropdown list",
        "description": "Returns a list of hash types (mode, name, category) for dropdowns. Supports optional filtering by name or mode, and confidence score if provided.",
        "operationId": "hash_types_dropdown_modal_api_v1_web_modals_hash_types_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by name or mode",
              "title": "Q"
            },
            "description": "Filter by name or mode"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HashTypeDropdownItem"
                  },
                  "title": "Response Hash Types Dropdown Modal Api V1 Web Modals Hash Types Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/templates/": {
      "get": {
        "tags": [
          "Web",
          "Templates"
        ],
        "summary": "List Templates",
        "description": "List recommended templates, filtered by attack_mode and project_id.\nNon-admins see all recommended templates and all global templates (project_ids is None).",
        "operationId": "list_templates_api_v1_web_templates__get",
        "parameters": [
          {
            "name": "attack_mode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Attack Mode"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "recommended",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Recommended"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttackTemplateRecordOut"
                  },
                  "title": "Response List Templates Api V1 Web Templates  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Web",
          "Templates"
        ],
        "summary": "Create Template",
        "operationId": "create_template_api_v1_web_templates__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttackTemplateRecordCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttackTemplateRecordOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/templates/{template_id}": {
      "get": {
        "tags": [
          "Web",
          "Templates"
        ],
        "summary": "Get Template",
        "operationId": "get_template_api_v1_web_templates__template_id__get",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttackTemplateRecordOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Web",
          "Templates"
        ],
        "summary": "Update Template",
        "operationId": "update_template_api_v1_web_templates__template_id__patch",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttackTemplateRecordUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttackTemplateRecordOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Web",
          "Templates"
        ],
        "summary": "Delete Template",
        "operationId": "delete_template_api_v1_web_templates__template_id__delete",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/auth/login": {
      "post": {
        "tags": [
          "Web",
          "Auth"
        ],
        "summary": "Login (Web UI)",
        "description": "Authenticate user and set JWT cookie for web UI. Accepts email and password in form data.",
        "operationId": "login_api_v1_web_auth_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_api_v1_web_auth_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/auth/logout": {
      "post": {
        "tags": [
          "Web",
          "Auth"
        ],
        "summary": "Logout (Web UI)",
        "description": "Clear JWT cookie and log out user.",
        "operationId": "logout_api_v1_web_auth_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/auth/refresh": {
      "post": {
        "tags": [
          "Web",
          "Auth"
        ],
        "summary": "Refresh JWT token (Web UI)",
        "description": "Refresh JWT access token using cookie. Supports automatic refresh for long-lived sessions.",
        "operationId": "refresh_token_api_v1_web_auth_refresh_post",
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_refresh_token_api_v1_web_auth_refresh_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/auth/me": {
      "get": {
        "tags": [
          "Web",
          "Auth"
        ],
        "summary": "Get current user profile (Web UI)",
        "description": "Return user profile for current user.",
        "operationId": "get_me_api_v1_web_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Web",
          "Auth"
        ],
        "summary": "Update current user profile (Web UI)",
        "description": "Update name/email for current user.",
        "operationId": "update_me_api_v1_web_auth_me_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/auth/change_password": {
      "post": {
        "tags": [
          "Web",
          "Auth"
        ],
        "summary": "Change password (Web UI)",
        "description": "Change password for current user.",
        "operationId": "change_password_api_v1_web_auth_change_password_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_change_password_api_v1_web_auth_change_password_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/auth/context": {
      "get": {
        "tags": [
          "Web",
          "Auth"
        ],
        "summary": "Get user/project context (Web UI)",
        "description": "Get current user and project context.",
        "operationId": "get_context_api_v1_web_auth_context_get",
        "parameters": [
          {
            "name": "active_project_id",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Active Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Web",
          "Auth"
        ],
        "summary": "Set user/project context (Web UI)",
        "description": "Set active project for current user.",
        "operationId": "set_context_api_v1_web_auth_context_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetContextRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/agents": {
      "get": {
        "tags": [
          "Web",
          "Agents"
        ],
        "summary": "List/filter agents",
        "description": "Return a paginated, filterable list of agents.",
        "operationId": "list_agents_api_v1_web_agents_get",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by host name",
              "title": "Search"
            },
            "description": "Search by host name"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by agent state",
              "title": "State"
            },
            "description": "Filter by agent state"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Page Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentListOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Web",
          "Agents"
        ],
        "summary": "Register new agent and return token",
        "description": "Register a new agent from the web UI. Only admins can register agents. Returns agent and token.",
        "operationId": "register_agent_api_v1_web_agents_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_register_agent_api_v1_web_agents_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentRegisterModalContext"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/agents/{agent_id}": {
      "get": {
        "tags": [
          "Web",
          "Agents"
        ],
        "summary": "Agent detail",
        "operationId": "agent_detail_api_v1_web_agents__agent_id__get",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Agent ID",
              "title": "Agent Id"
            },
            "description": "Agent ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Web",
          "Agents"
        ],
        "summary": "Toggle agent enabled/disabled",
        "operationId": "toggle_agent_enabled_api_v1_web_agents__agent_id__patch",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Agent ID",
              "title": "Agent Id"
            },
            "description": "Agent ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentToggleEnabledOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/agents/{agent_id}/benchmarks": {
      "get": {
        "tags": [
          "Web",
          "Agents"
        ],
        "summary": "Agent benchmark summary",
        "operationId": "agent_benchmark_summary_api_v1_web_agents__agent_id__benchmarks_get",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Agent ID",
              "title": "Agent Id"
            },
            "description": "Agent ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentBenchmarkSummaryOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/agents/{agent_id}/benchmark": {
      "post": {
        "tags": [
          "Web",
          "Agents"
        ],
        "summary": "Trigger agent benchmark run (set to pending)",
        "operationId": "trigger_agent_benchmark_api_v1_web_agents__agent_id__benchmark_post",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Agent ID",
              "title": "Agent Id"
            },
            "description": "Agent ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/agents/{agent_id}/test_presigned": {
      "post": {
        "tags": [
          "Web",
          "Agents"
        ],
        "summary": "Validate presigned S3/MinIO URL for agent resource",
        "operationId": "test_agent_presigned_url_api_v1_web_agents__agent_id__test_presigned_post",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Agent ID",
              "title": "Agent Id"
            },
            "description": "Agent ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_test_agent_presigned_url_api_v1_web_agents__agent_id__test_presigned_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentPresignedUrlTestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/agents/{agent_id}/config": {
      "patch": {
        "tags": [
          "Web",
          "Agents"
        ],
        "summary": "Update agent advanced configuration",
        "operationId": "update_agent_config_api_v1_web_agents__agent_id__config_patch",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Agent ID",
              "title": "Agent Id"
            },
            "description": "Agent ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_agent_config_api_v1_web_agents__agent_id__config_patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentUpdateConfigOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/agents/{agent_id}/errors": {
      "get": {
        "tags": [
          "Web",
          "Agents"
        ],
        "summary": "Agent error log",
        "operationId": "agent_error_log_api_v1_web_agents__agent_id__errors_get",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Agent ID",
              "title": "Agent Id"
            },
            "description": "Agent ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentErrorLogOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/agents/{agent_id}/devices": {
      "patch": {
        "tags": [
          "Web",
          "Agents"
        ],
        "summary": "Toggle enabled backend devices for agent",
        "operationId": "toggle_agent_devices_api_v1_web_agents__agent_id__devices_patch",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Agent ID",
              "title": "Agent Id"
            },
            "description": "Agent ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_toggle_agent_devices_api_v1_web_agents__agent_id__devices_patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentUpdateDevicesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/agents/{agent_id}/performance": {
      "get": {
        "tags": [
          "Web",
          "Agents"
        ],
        "summary": "Agent performance time series",
        "operationId": "agent_performance_api_v1_web_agents__agent_id__performance_get",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Agent ID",
              "title": "Agent Id"
            },
            "description": "Agent ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentPerformanceSeriesOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/agents/{agent_id}/hardware": {
      "get": {
        "tags": [
          "Web",
          "Agents"
        ],
        "summary": "Agent hardware detail",
        "operationId": "agent_hardware_api_v1_web_agents__agent_id__hardware_get",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Agent ID",
              "title": "Agent Id"
            },
            "description": "Agent ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Web",
          "Agents"
        ],
        "summary": "Update agent hardware limits and platform toggles",
        "description": "Update hardware-related advanced configuration fields for an agent. Only project admins or superusers may update.",
        "operationId": "update_agent_hardware_api_v1_web_agents__agent_id__hardware_patch",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Agent ID",
              "title": "Agent Id"
            },
            "description": "Agent ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_agent_hardware_api_v1_web_agents__agent_id__hardware_patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentUpdateHardwareOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/agents/{agent_id}/capabilities": {
      "get": {
        "tags": [
          "Web",
          "Agents"
        ],
        "summary": "Show agent benchmark capabilities (table + graph)",
        "operationId": "agent_capabilities_api_v1_web_agents__agent_id__capabilities_get",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Agent ID",
              "title": "Agent Id"
            },
            "description": "Agent ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Agent capabilities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentCapabilitiesOut"
                }
              }
            }
          },
          "404": {
            "description": "Agent not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/dashboard/summary": {
      "get": {
        "tags": [
          "Web",
          "Dashboard"
        ],
        "summary": "Get Dashboard Summary",
        "operationId": "get_dashboard_summary_api_v1_web_dashboard_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSummary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/health/overview": {
      "get": {
        "tags": [
          "Web",
          "Health"
        ],
        "summary": "Get System Health Overview",
        "operationId": "get_system_health_overview_api_v1_web_health_overview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemHealthOverview"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/health/components": {
      "get": {
        "tags": [
          "Web",
          "Health"
        ],
        "summary": "Get System Health Components",
        "description": "Get detailed health information for core system components.\n\nReturns basic health information for all users, with additional\ndetailed metrics for admin users including:\n- MinIO: object count and storage usage\n- Redis: keyspace statistics and eviction metrics\n- PostgreSQL: connection pool stats and long-running queries",
        "operationId": "get_system_health_components_api_v1_web_health_components_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemHealthComponents"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/uploads/": {
      "post": {
        "tags": [
          "Web",
          "Uploads"
        ],
        "summary": "Upload file or pasted hash blob",
        "description": "Create an UploadResourceFile DB record and HashUploadTask. For files, return a presigned S3 upload URL. For text blobs, store content directly and trigger processing.",
        "operationId": "upload_resource_metadata_api_v1_web_uploads__post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_resource_metadata_api_v1_web_uploads__post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceUploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/uploads/{upload_id}/status": {
      "get": {
        "tags": [
          "Web",
          "Uploads"
        ],
        "summary": "Get status of a hash upload task",
        "description": "Return the status and metadata for a hash upload task, including hash type, preview, and validation state.",
        "operationId": "get_upload_status_api_v1_web_uploads__upload_id__status_get",
        "parameters": [
          {
            "name": "upload_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Upload task ID",
              "title": "Upload Id"
            },
            "description": "Upload task ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadStatusOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/uploads/{upload_id}/errors": {
      "get": {
        "tags": [
          "Web",
          "Uploads"
        ],
        "summary": "Get paginated list of failed lines for an upload task",
        "description": "Return paginated UploadErrorEntry objects for a given upload task.",
        "operationId": "get_upload_errors_api_v1_web_uploads__upload_id__errors_get",
        "parameters": [
          {
            "name": "upload_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Upload task ID",
              "title": "Upload Id"
            },
            "description": "Upload task ID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Page Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadErrorEntryListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/uploads/{upload_id}/launch_campaign": {
      "post": {
        "tags": [
          "Web",
          "Uploads"
        ],
        "summary": "Generate resources and create campaign with default attacks",
        "description": "Finalize the upload by creating default attacks and making the campaign available for use. The campaign and hash list will be marked as available.",
        "operationId": "launch_campaign_api_v1_web_uploads__upload_id__launch_campaign_post",
        "parameters": [
          {
            "name": "upload_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Upload task ID",
              "title": "Upload Id"
            },
            "description": "Upload task ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Launch Campaign Api V1 Web Uploads  Upload Id  Launch Campaign Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/uploads/{upload_id}": {
      "delete": {
        "tags": [
          "Web",
          "Uploads"
        ],
        "summary": "Remove discarded or invalid upload",
        "description": "Delete an upload task and all associated resources. Only allowed if the upload has not been converted into a fully formed campaign/hash_list with attacks.",
        "operationId": "delete_upload_api_v1_web_uploads__upload_id__delete",
        "parameters": [
          {
            "name": "upload_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Upload task ID",
              "title": "Upload Id"
            },
            "description": "Upload task ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/hash_lists/": {
      "post": {
        "tags": [
          "Web",
          "Hash Lists"
        ],
        "summary": "Create a new hash list",
        "description": "Create a new hash list in the specified project.",
        "operationId": "create_hash_list_api_v1_web_hash_lists__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HashListCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HashListOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Web",
          "Hash Lists"
        ],
        "summary": "List hash lists",
        "description": "List hash lists with pagination and filtering.",
        "operationId": "list_hash_lists_api_v1_web_hash_lists__get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by name; optional",
              "title": "Name"
            },
            "description": "Filter by name; optional"
          },
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by project ID; optional",
              "title": "Project Id"
            },
            "description": "Filter by project ID; optional"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse_HashListOut_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/hash_lists/{hash_list_id}": {
      "get": {
        "tags": [
          "Web",
          "Hash Lists"
        ],
        "summary": "Get hash list by ID",
        "description": "Get a hash list by its ID.",
        "operationId": "get_hash_list_api_v1_web_hash_lists__hash_list_id__get",
        "parameters": [
          {
            "name": "hash_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Hash List Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HashListOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Web",
          "Hash Lists"
        ],
        "summary": "Update hash list",
        "description": "Update a hash list by its ID.",
        "operationId": "update_hash_list_api_v1_web_hash_lists__hash_list_id__patch",
        "parameters": [
          {
            "name": "hash_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Hash List Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HashListUpdateData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HashListOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Web",
          "Hash Lists"
        ],
        "summary": "Delete hash list",
        "description": "Delete a hash list by its ID.",
        "operationId": "delete_hash_list_api_v1_web_hash_lists__hash_list_id__delete",
        "parameters": [
          {
            "name": "hash_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Hash List Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/web/hash_lists/{hash_list_id}/items": {
      "get": {
        "tags": [
          "Web",
          "Hash Lists"
        ],
        "summary": "List hash items in hash list",
        "description": "List hash items in a hash list with pagination, search, and filtering. Supports CSV/TSV export.",
        "operationId": "list_hash_list_items_api_v1_web_hash_lists__hash_list_id__items_get",
        "parameters": [
          {
            "name": "hash_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Hash List Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by hash value or plaintext; optional",
              "title": "Search"
            },
            "description": "Search by hash value or plaintext; optional"
          },
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by status: 'cracked', 'uncracked'; optional",
              "title": "Status Filter"
            },
            "description": "Filter by status: 'cracked', 'uncracked'; optional"
          },
          {
            "name": "export_format",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Export format: 'csv', 'tsv'; optional",
              "title": "Export Format"
            },
            "description": "Export format: 'csv', 'tsv'; optional"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/control/campaigns": {
      "get": {
        "tags": [
          "Control",
          "Control - Campaigns"
        ],
        "summary": "List campaigns",
        "description": "List campaigns with offset-based pagination and filtering. Supports project scoping based on user permissions.",
        "operationId": "list_campaigns_api_v1_control_campaigns_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of items to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "Number of items to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of items to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of items to skip"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter campaigns by name (case-insensitive partial match)",
              "title": "Name"
            },
            "description": "Filter campaigns by name (case-insensitive partial match)"
          },
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter campaigns by project ID",
              "title": "Project Id"
            },
            "description": "Filter campaigns by project ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OffsetPaginatedResponse_CampaignRead_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/control/hash_guess": {
      "post": {
        "tags": [
          "Control",
          "Hash Guessing"
        ],
        "summary": "Guess hash types from pasted material",
        "description": "Accepts pasted hash material and returns ranked hash type candidates.",
        "operationId": "guess_hash_types_control_api_v1_control_hash_guess_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__api__v1__endpoints__control__hash_guess__HashGuessRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HashGuessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/control/projects": {
      "get": {
        "tags": [
          "Control",
          "Projects"
        ],
        "summary": "List projects",
        "description": "List projects accessible to the current user.\n\nAccess is scoped to projects the user has access to based on their project associations.\nSuperusers and admin users can see all projects, while regular users only see\nprojects they are explicitly assigned to.",
        "operationId": "list_projects_api_v1_control_projects_get",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of records to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of records to return",
              "default": 20,
              "title": "Limit"
            },
            "description": "Number of records to return"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Control",
          "Projects"
        ],
        "summary": "Create project",
        "description": "Create a new project.",
        "operationId": "create_project_api_v1_control_projects_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/control/projects/{project_id}": {
      "get": {
        "tags": [
          "Control",
          "Projects"
        ],
        "summary": "Get project by ID",
        "description": "Get project details by ID.",
        "operationId": "get_project_api_v1_control_projects__project_id__get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Control",
          "Projects"
        ],
        "summary": "Update project",
        "description": "Update project by ID.",
        "operationId": "update_project_api_v1_control_projects__project_id__patch",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Control",
          "Projects"
        ],
        "summary": "Delete project",
        "description": "Delete a project.",
        "operationId": "delete_project_api_v1_control_projects__project_id__delete",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/control/projects/{project_id}/users": {
      "get": {
        "tags": [
          "Control",
          "Projects"
        ],
        "summary": "List project users",
        "description": "List users associated with a specific project.\n\nAccess is scoped to projects the user has access to based on their project associations.",
        "operationId": "list_project_users_api_v1_control_projects__project_id__users_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of records to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of records to return",
              "default": 20,
              "title": "Limit"
            },
            "description": "Number of records to return"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectUsersResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/control/system/status": {
      "get": {
        "tags": [
          "Control",
          "System"
        ],
        "summary": "Get system health status",
        "description": "Get system health status for monitoring and troubleshooting.",
        "operationId": "get_system_status_api_v1_control_system_status_get",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemHealthOverview"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/control/system/stats": {
      "get": {
        "tags": [
          "Control",
          "System"
        ],
        "summary": "Get system statistics",
        "description": "Get system-wide statistics and metrics.",
        "operationId": "get_system_stats_api_v1_control_system_stats_get",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/control/system/queues": {
      "get": {
        "tags": [
          "Control",
          "System"
        ],
        "summary": "Get queue status",
        "description": "Get queue status and background task monitoring information.",
        "operationId": "get_queue_status_api_v1_control_system_queues_get",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/control/system/version": {
      "get": {
        "tags": [
          "Control",
          "System"
        ],
        "summary": "Get system version",
        "description": "Get system version information for compatibility checking.",
        "operationId": "get_system_version_api_v1_control_system_version_get",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemVersionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/control/users": {
      "get": {
        "tags": [
          "Control",
          "Control - Users"
        ],
        "summary": "List users",
        "description": "List users with offset-based pagination and filtering. Requires admin permissions.",
        "operationId": "list_users_api_v1_control_users_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of items to return",
              "default": 20,
              "title": "Limit"
            },
            "description": "Number of items to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of items to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of items to skip"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search users by name or email (case-insensitive partial match)",
              "title": "Search"
            },
            "description": "Search users by name or email (case-insensitive partial match)"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Control",
          "Control - Users"
        ],
        "summary": "Create user",
        "description": "Create a new user. Requires admin permissions.",
        "operationId": "create_user_api_v1_control_users_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateControl"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/control/users/{user_id}": {
      "get": {
        "tags": [
          "Control",
          "Control - Users"
        ],
        "summary": "Get user by ID",
        "description": "Get user details by ID. Requires admin permissions.",
        "operationId": "get_user_api_v1_control_users__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "User ID",
              "title": "User Id"
            },
            "description": "User ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Control",
          "Control - Users"
        ],
        "summary": "Update user",
        "description": "Update user fields including name, email, password, and role. Requires admin permissions.",
        "operationId": "update_user_api_v1_control_users__user_id__patch",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "User ID",
              "title": "User Id"
            },
            "description": "User ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Control",
          "Control - Users"
        ],
        "summary": "Delete user",
        "description": "Deactivate (soft delete) a user. Requires admin permissions.",
        "operationId": "delete_user_api_v1_control_users__user_id__delete",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "User ID",
              "title": "User Id"
            },
            "description": "User ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/control/users/{user_id}/rotate-keys": {
      "post": {
        "tags": [
          "Control",
          "Control - Users"
        ],
        "summary": "Rotate user API key",
        "description": "Generate a new API key for the user, invalidating the old one. Requires admin permissions.",
        "operationId": "rotate_user_api_key_api_v1_control_users__user_id__rotate_keys_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "User ID",
              "title": "User Id"
            },
            "description": "User ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyRotationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/control/users/{user_id}/api-keys": {
      "get": {
        "tags": [
          "Control",
          "Control - Users"
        ],
        "summary": "Get user API key info",
        "description": "Get information about a user's API key without exposing the full key. Requires admin permissions.",
        "operationId": "get_user_api_key_info_api_v1_control_users__user_id__api_keys_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "User ID",
              "title": "User Id"
            },
            "description": "User ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyInfoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/downloads/{resource_id}/download": {
      "get": {
        "tags": [
          "Downloads"
        ],
        "summary": "Get resource download URL",
        "description": "Generate a presigned URL for the given resource. Requires valid Authorization.",
        "operationId": "get_resource_download_url_api_v1_downloads__resource_id__download_get",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Resource Id"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Get Resource Download Url Api V1 Downloads  Resource Id  Download Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/downloads/{resource_id}/ephemeral-download": {
      "get": {
        "tags": [
          "Downloads"
        ],
        "summary": "Download ephemeral resource as file",
        "description": "Download an ephemeral resource as a file. Requires valid Authorization.",
        "operationId": "download_ephemeral_resource_api_v1_downloads__resource_id__ephemeral_download_get",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Resource Id"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api-info": {
      "get": {
        "summary": "Api Info",
        "description": "API information stub (moved from root).",
        "operationId": "api_info_api_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Api Info Api Info Get"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Simple health check endpoint for Docker health checks.",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Health Check Health Get"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdvancedAgentConfiguration": {
        "properties": {
          "agent_update_interval": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Update Interval",
            "description": "The interval in seconds to check for agent updates",
            "default": 30
          },
          "use_native_hashcat": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Native Hashcat",
            "description": "Use the hashcat binary already installed on the client system",
            "default": false
          },
          "backend_device": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backend Device",
            "description": "The device to use for hashcat, separated by commas"
          },
          "opencl_devices": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Opencl Devices",
            "description": "The OpenCL device types to use for hashcat, separated by commas"
          },
          "enable_additional_hash_types": {
            "type": "boolean",
            "title": "Enable Additional Hash Types",
            "description": "Causes hashcat to perform benchmark-all, rather than just benchmark",
            "default": false
          },
          "hwmon_temp_abort": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hwmon Temp Abort",
            "description": "Temperature abort threshold in Celsius for hashcat (--hwmon-temp-abort)"
          },
          "backend_ignore_cuda": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backend Ignore Cuda",
            "description": "Ignore CUDA backend (--backend-ignore-cuda)"
          },
          "backend_ignore_opencl": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backend Ignore Opencl",
            "description": "Ignore OpenCL backend (--backend-ignore-opencl)"
          },
          "backend_ignore_hip": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backend Ignore Hip",
            "description": "Ignore HIP backend (--backend-ignore-hip)"
          },
          "backend_ignore_metal": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backend Ignore Metal",
            "description": "Ignore Metal backend (--backend-ignore-metal)"
          }
        },
        "type": "object",
        "title": "AdvancedAgentConfiguration",
        "description": "Schema for advanced agent configuration."
      },
      "AgentAuthenticateResponse": {
        "properties": {
          "authenticated": {
            "type": "boolean",
            "title": "Authenticated",
            "description": "Whether the agent is authenticated"
          },
          "agent_id": {
            "type": "integer",
            "title": "Agent Id",
            "description": "The ID of the authenticated agent"
          }
        },
        "type": "object",
        "required": [
          "authenticated",
          "agent_id"
        ],
        "title": "AgentAuthenticateResponse"
      },
      "AgentBenchmark": {
        "properties": {
          "hashcat_benchmarks": {
            "items": {
              "$ref": "#/components/schemas/HashcatBenchmark"
            },
            "type": "array",
            "title": "Hashcat Benchmarks"
          }
        },
        "type": "object",
        "required": [
          "hashcat_benchmarks"
        ],
        "title": "AgentBenchmark",
        "description": "Schema for agent benchmark submission."
      },
      "AgentBenchmarkSummaryOut": {
        "properties": {
          "benchmarks_by_hash_type": {
            "additionalProperties": {
              "items": {
                "additionalProperties": true,
                "type": "object"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Benchmarks By Hash Type"
          }
        },
        "type": "object",
        "required": [
          "benchmarks_by_hash_type"
        ],
        "title": "AgentBenchmarkSummaryOut"
      },
      "AgentCapabilitiesOut": {
        "properties": {
          "agent_id": {
            "type": "integer",
            "title": "Agent Id"
          },
          "capabilities": {
            "items": {
              "$ref": "#/components/schemas/AgentCapabilityOut"
            },
            "type": "array",
            "title": "Capabilities"
          },
          "last_benchmark": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Benchmark"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "capabilities",
          "last_benchmark"
        ],
        "title": "AgentCapabilitiesOut"
      },
      "AgentCapabilityDeviceOut": {
        "properties": {
          "device": {
            "type": "string",
            "title": "Device"
          },
          "hash_speed": {
            "type": "number",
            "title": "Hash Speed"
          },
          "runtime": {
            "type": "integer",
            "title": "Runtime"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "device",
          "hash_speed",
          "runtime",
          "created_at"
        ],
        "title": "AgentCapabilityDeviceOut"
      },
      "AgentCapabilityOut": {
        "properties": {
          "hash_type_id": {
            "type": "integer",
            "title": "Hash Type Id"
          },
          "hash_type_name": {
            "type": "string",
            "title": "Hash Type Name"
          },
          "hash_type_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hash Type Description"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "speed": {
            "type": "number",
            "title": "Speed"
          },
          "devices": {
            "items": {
              "$ref": "#/components/schemas/AgentCapabilityDeviceOut"
            },
            "type": "array",
            "title": "Devices"
          },
          "last_benchmarked": {
            "type": "string",
            "format": "date-time",
            "title": "Last Benchmarked"
          }
        },
        "type": "object",
        "required": [
          "hash_type_id",
          "hash_type_name",
          "hash_type_description",
          "category",
          "speed",
          "devices",
          "last_benchmarked"
        ],
        "title": "AgentCapabilityOut"
      },
      "AgentConfigurationResponse": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/AdvancedAgentConfiguration"
          },
          "api_version": {
            "type": "integer",
            "title": "Api Version"
          }
        },
        "type": "object",
        "required": [
          "config",
          "api_version"
        ],
        "title": "AgentConfigurationResponse"
      },
      "AgentDropdownItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Agent ID"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "description": "Agent display name, either custom_label or host_name if custom_label is not set"
          },
          "state": {
            "$ref": "#/components/schemas/AgentState",
            "description": "Agent state, either active, stopped, error, or offline"
          }
        },
        "type": "object",
        "required": [
          "id",
          "display_name",
          "state"
        ],
        "title": "AgentDropdownItem"
      },
      "AgentErrorLogOut": {
        "properties": {
          "errors": {
            "items": {},
            "type": "array",
            "title": "Errors"
          }
        },
        "type": "object",
        "required": [
          "errors"
        ],
        "title": "AgentErrorLogOut"
      },
      "AgentErrorV1": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "The error message"
          },
          "severity": {
            "type": "string",
            "pattern": "^(info|warning|minor|major|critical|fatal)$",
            "title": "Severity",
            "description": "The severity of the error"
          },
          "agent_id": {
            "type": "integer",
            "title": "Agent Id",
            "description": "The agent that caused the error"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Additional metadata about the error"
          },
          "task_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Id",
            "description": "The task that caused the error, if any"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "message",
          "severity",
          "agent_id"
        ],
        "title": "AgentErrorV1"
      },
      "AgentHealthSummary": {
        "properties": {
          "total_agents": {
            "type": "integer",
            "title": "Total Agents",
            "description": "Total number of agents"
          },
          "online_agents": {
            "type": "integer",
            "title": "Online Agents",
            "description": "Number of agents online (last seen <2min)"
          },
          "total_campaigns": {
            "type": "integer",
            "title": "Total Campaigns",
            "description": "Total number of campaigns"
          },
          "total_tasks": {
            "type": "integer",
            "title": "Total Tasks",
            "description": "Total number of tasks"
          },
          "total_hashlists": {
            "type": "integer",
            "title": "Total Hashlists",
            "description": "Total number of hash lists"
          }
        },
        "type": "object",
        "required": [
          "total_agents",
          "online_agents",
          "total_campaigns",
          "total_tasks",
          "total_hashlists"
        ],
        "title": "AgentHealthSummary"
      },
      "AgentHeartbeatRequest": {
        "properties": {
          "state": {
            "$ref": "#/components/schemas/AgentState",
            "description": "Current agent state"
          }
        },
        "type": "object",
        "required": [
          "state"
        ],
        "title": "AgentHeartbeatRequest"
      },
      "AgentListOut": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AgentOut"
            },
            "type": "array",
            "title": "Items",
            "description": "List of items"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "page": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Page",
            "description": "Current page number",
            "default": 1
          },
          "page_size": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Page Size",
            "description": "Number of items per page",
            "default": 20
          },
          "search": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search",
            "description": "Search query"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "AgentListOut"
      },
      "AgentOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "host_name": {
            "type": "string",
            "title": "Host Name"
          },
          "client_signature": {
            "type": "string",
            "title": "Client Signature"
          },
          "custom_label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Label"
          },
          "state": {
            "$ref": "#/components/schemas/AgentState"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "advanced_configuration": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Advanced Configuration"
          },
          "devices": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Devices"
          },
          "agent_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AgentType"
              },
              {
                "type": "null"
              }
            ]
          },
          "operating_system": {
            "$ref": "#/components/schemas/OperatingSystemEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "last_seen_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Seen At"
          },
          "last_ipaddress": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Ipaddress"
          },
          "projects": {
            "items": {},
            "type": "array",
            "title": "Projects",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "host_name",
          "client_signature",
          "state",
          "enabled",
          "operating_system",
          "created_at",
          "updated_at"
        ],
        "title": "AgentOut"
      },
      "AgentPerformanceSeriesOut": {
        "properties": {
          "series": {
            "items": {
              "$ref": "#/components/schemas/DevicePerformanceSeries"
            },
            "type": "array",
            "title": "Series"
          }
        },
        "type": "object",
        "required": [
          "series"
        ],
        "title": "AgentPerformanceSeriesOut"
      },
      "AgentPresignedUrlTestRequest": {
        "properties": {
          "url": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Url",
            "description": "The presigned S3/MinIO URL to test"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "AgentPresignedUrlTestRequest"
      },
      "AgentPresignedUrlTestResponse": {
        "properties": {
          "valid": {
            "type": "boolean",
            "title": "Valid"
          }
        },
        "type": "object",
        "required": [
          "valid"
        ],
        "title": "AgentPresignedUrlTestResponse"
      },
      "AgentRegisterModalContext": {
        "properties": {
          "agent": {
            "$ref": "#/components/schemas/AgentOut"
          },
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "agent",
          "token"
        ],
        "title": "AgentRegisterModalContext"
      },
      "AgentResponseV1": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "The id of the agent"
          },
          "host_name": {
            "type": "string",
            "title": "Host Name",
            "description": "The hostname of the agent"
          },
          "client_signature": {
            "type": "string",
            "title": "Client Signature",
            "description": "The signature of the client"
          },
          "operating_system": {
            "type": "string",
            "title": "Operating System",
            "description": "The operating system of the agent"
          },
          "devices": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Devices",
            "description": "The descriptive name of a GPU or CPU device."
          },
          "state": {
            "type": "string",
            "title": "State",
            "description": "The state of the agent"
          },
          "advanced_configuration": {
            "$ref": "#/components/schemas/AdvancedAgentConfiguration",
            "description": "The advanced configuration of the agent"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "host_name",
          "client_signature",
          "operating_system",
          "devices",
          "state",
          "advanced_configuration"
        ],
        "title": "AgentResponseV1"
      },
      "AgentState": {
        "type": "string",
        "enum": [
          "pending",
          "active",
          "stopped",
          "error"
        ],
        "title": "AgentState",
        "description": "Enum for agent states."
      },
      "AgentToggleEnabledOut": {
        "properties": {
          "agent": {
            "$ref": "#/components/schemas/AgentOut"
          }
        },
        "type": "object",
        "required": [
          "agent"
        ],
        "title": "AgentToggleEnabledOut"
      },
      "AgentType": {
        "type": "string",
        "enum": [
          "physical",
          "virtual",
          "container"
        ],
        "title": "AgentType",
        "description": "Enum for agent types."
      },
      "AgentUpdateConfigOut": {
        "properties": {
          "agent": {
            "$ref": "#/components/schemas/AgentOut"
          }
        },
        "type": "object",
        "required": [
          "agent"
        ],
        "title": "AgentUpdateConfigOut"
      },
      "AgentUpdateDevicesOut": {
        "properties": {
          "agent": {
            "$ref": "#/components/schemas/AgentOut"
          }
        },
        "type": "object",
        "required": [
          "agent"
        ],
        "title": "AgentUpdateDevicesOut"
      },
      "AgentUpdateHardwareOut": {
        "properties": {
          "agent": {
            "$ref": "#/components/schemas/AgentOut"
          }
        },
        "type": "object",
        "required": [
          "agent"
        ],
        "title": "AgentUpdateHardwareOut"
      },
      "AgentUpdateV1": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "The id of the agent"
          },
          "host_name": {
            "type": "string",
            "title": "Host Name",
            "description": "The hostname of the agent"
          },
          "client_signature": {
            "type": "string",
            "title": "Client Signature",
            "description": "The signature of the client"
          },
          "operating_system": {
            "type": "string",
            "title": "Operating System",
            "description": "The operating system of the agent"
          },
          "devices": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Devices",
            "description": "The descriptive name of a GPU or CPU device."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "host_name",
          "client_signature",
          "operating_system",
          "devices"
        ],
        "title": "AgentUpdateV1"
      },
      "ApiKeyInfoResponse": {
        "properties": {
          "has_api_key": {
            "type": "boolean",
            "title": "Has Api Key"
          },
          "api_key_prefix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key Prefix"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "last_used_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used At"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "has_api_key",
          "message"
        ],
        "title": "ApiKeyInfoResponse",
        "description": "Schema for API key information response."
      },
      "ApiKeyRotationResponse": {
        "properties": {
          "api_key": {
            "type": "string",
            "title": "Api Key"
          },
          "rotated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Rotated At"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "default": "API key has been successfully rotated"
          }
        },
        "type": "object",
        "required": [
          "api_key",
          "rotated_at"
        ],
        "title": "ApiKeyRotationResponse",
        "description": "Schema for API key rotation response."
      },
      "AttackBasic": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "AttackBasic"
      },
      "AttackBulkDeleteRequest": {
        "properties": {
          "attack_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Attack Ids",
            "description": "List of attack IDs to delete"
          }
        },
        "type": "object",
        "required": [
          "attack_ids"
        ],
        "title": "AttackBulkDeleteRequest"
      },
      "AttackCampaignResponse": {
        "properties": {
          "campaign": {
            "$ref": "#/components/schemas/CampaignRead"
          },
          "attacks": {
            "items": {
              "$ref": "#/components/schemas/AttackSummary"
            },
            "type": "array",
            "title": "Attacks"
          }
        },
        "type": "object",
        "required": [
          "campaign",
          "attacks"
        ],
        "title": "AttackCampaignResponse"
      },
      "AttackCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 128,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "state": {
            "$ref": "#/components/schemas/AttackState",
            "default": "pending"
          },
          "attack_mode": {
            "$ref": "#/components/schemas/AttackMode"
          },
          "attack_mode_hashcat": {
            "type": "integer",
            "title": "Attack Mode Hashcat",
            "default": 0
          },
          "hash_mode": {
            "type": "integer",
            "title": "Hash Mode",
            "default": 0
          },
          "mask": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mask"
          },
          "increment_mode": {
            "type": "boolean",
            "title": "Increment Mode",
            "default": false
          },
          "increment_minimum": {
            "type": "integer",
            "title": "Increment Minimum",
            "default": 0
          },
          "increment_maximum": {
            "type": "integer",
            "title": "Increment Maximum",
            "default": 0
          },
          "optimized": {
            "type": "boolean",
            "title": "Optimized",
            "default": false
          },
          "slow_candidate_generators": {
            "type": "boolean",
            "title": "Slow Candidate Generators",
            "default": false
          },
          "workload_profile": {
            "type": "integer",
            "title": "Workload Profile",
            "default": 3
          },
          "disable_markov": {
            "type": "boolean",
            "title": "Disable Markov",
            "default": false
          },
          "classic_markov": {
            "type": "boolean",
            "title": "Classic Markov",
            "default": false
          },
          "markov_threshold": {
            "type": "integer",
            "title": "Markov Threshold",
            "default": 0
          },
          "left_rule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Left Rule"
          },
          "right_rule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Right Rule"
          },
          "custom_charset_1": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 1"
          },
          "custom_charset_2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 2"
          },
          "custom_charset_3": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 3"
          },
          "custom_charset_4": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 4"
          },
          "hash_list_id": {
            "type": "integer",
            "title": "Hash List Id"
          },
          "hash_list_url": {
            "type": "string",
            "title": "Hash List Url"
          },
          "hash_list_checksum": {
            "type": "string",
            "title": "Hash List Checksum"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 0
          },
          "position": {
            "type": "integer",
            "title": "Position",
            "default": 0
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "campaign_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Campaign Id"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id"
          },
          "modifiers": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modifiers"
          },
          "wordlist_source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WordlistSource"
              },
              {
                "type": "null"
              }
            ]
          },
          "word_list_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Word List Id"
          },
          "rule_list_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule List Id"
          },
          "mask_list_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mask List Id"
          },
          "wordlist_inline": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Wordlist Inline"
          },
          "masks_inline": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Masks Inline"
          }
        },
        "type": "object",
        "required": [
          "name",
          "attack_mode",
          "hash_list_id",
          "hash_list_url",
          "hash_list_checksum"
        ],
        "title": "AttackCreate"
      },
      "AttackEditorContext": {
        "properties": {
          "attack": {
            "title": "Attack"
          },
          "imported": {
            "type": "boolean",
            "title": "Imported",
            "default": false
          },
          "keyspace": {
            "type": "integer",
            "title": "Keyspace",
            "default": 0
          },
          "complexity": {
            "type": "integer",
            "title": "Complexity",
            "default": 0
          },
          "complexity_score": {
            "type": "integer",
            "title": "Complexity Score",
            "default": 1
          },
          "modifiers": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modifiers"
          },
          "rule_file_uuid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule File Uuid"
          }
        },
        "type": "object",
        "title": "AttackEditorContext",
        "description": "Context for the attack editor modal (empty for new attack or prefilled for import)."
      },
      "AttackMode": {
        "type": "string",
        "enum": [
          "dictionary",
          "mask",
          "hybrid_dictionary",
          "hybrid_mask"
        ],
        "title": "AttackMode",
        "description": "Enum for attack modes."
      },
      "AttackMoveDirection": {
        "type": "string",
        "enum": [
          "up",
          "down",
          "top",
          "bottom"
        ],
        "title": "AttackMoveDirection"
      },
      "AttackMoveRequest": {
        "properties": {
          "direction": {
            "$ref": "#/components/schemas/AttackMoveDirection",
            "description": "Direction to move the attack"
          }
        },
        "type": "object",
        "required": [
          "direction"
        ],
        "title": "AttackMoveRequest"
      },
      "AttackOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "state": {
            "$ref": "#/components/schemas/AttackState"
          },
          "attack_mode": {
            "$ref": "#/components/schemas/AttackMode"
          },
          "attack_mode_hashcat": {
            "type": "integer",
            "title": "Attack Mode Hashcat"
          },
          "hash_mode": {
            "type": "integer",
            "title": "Hash Mode"
          },
          "mask": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mask"
          },
          "increment_mode": {
            "type": "boolean",
            "title": "Increment Mode"
          },
          "increment_minimum": {
            "type": "integer",
            "title": "Increment Minimum"
          },
          "increment_maximum": {
            "type": "integer",
            "title": "Increment Maximum"
          },
          "optimized": {
            "type": "boolean",
            "title": "Optimized"
          },
          "slow_candidate_generators": {
            "type": "boolean",
            "title": "Slow Candidate Generators"
          },
          "workload_profile": {
            "type": "integer",
            "title": "Workload Profile"
          },
          "disable_markov": {
            "type": "boolean",
            "title": "Disable Markov"
          },
          "classic_markov": {
            "type": "boolean",
            "title": "Classic Markov"
          },
          "markov_threshold": {
            "type": "integer",
            "title": "Markov Threshold"
          },
          "left_rule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Left Rule"
          },
          "right_rule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Right Rule"
          },
          "custom_charset_1": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 1"
          },
          "custom_charset_2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 2"
          },
          "custom_charset_3": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 3"
          },
          "custom_charset_4": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 4"
          },
          "hash_list_id": {
            "type": "integer",
            "title": "Hash List Id"
          },
          "word_list": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttackResourceFileOut"
              },
              {
                "type": "null"
              }
            ]
          },
          "rule_list": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttackResourceFileOut"
              },
              {
                "type": "null"
              }
            ]
          },
          "mask_list": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttackResourceFileOut"
              },
              {
                "type": "null"
              }
            ]
          },
          "hash_list_url": {
            "type": "string",
            "title": "Hash List Url"
          },
          "hash_list_checksum": {
            "type": "string",
            "title": "Hash List Checksum"
          },
          "priority": {
            "type": "integer",
            "title": "Priority"
          },
          "position": {
            "type": "integer",
            "title": "Position"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "campaign_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Campaign Id"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id"
          },
          "modifiers": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modifiers"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "state",
          "attack_mode",
          "attack_mode_hashcat",
          "hash_mode",
          "mask",
          "increment_mode",
          "increment_minimum",
          "increment_maximum",
          "optimized",
          "slow_candidate_generators",
          "workload_profile",
          "disable_markov",
          "classic_markov",
          "markov_threshold",
          "left_rule",
          "right_rule",
          "custom_charset_1",
          "custom_charset_2",
          "custom_charset_3",
          "custom_charset_4",
          "hash_list_id",
          "hash_list_url",
          "hash_list_checksum",
          "priority",
          "position",
          "start_time",
          "end_time",
          "campaign_id",
          "template_id"
        ],
        "title": "AttackOut"
      },
      "AttackOutV1": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "The id of the attack"
          },
          "attack_mode": {
            "type": "string",
            "title": "Attack Mode",
            "description": "Attack mode name"
          },
          "attack_mode_hashcat": {
            "type": "integer",
            "title": "Attack Mode Hashcat",
            "description": "hashcat attack mode"
          },
          "mask": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mask",
            "description": "A hashcat mask string"
          },
          "increment_mode": {
            "type": "boolean",
            "title": "Increment Mode",
            "description": "Enable hashcat increment mode"
          },
          "increment_minimum": {
            "type": "integer",
            "title": "Increment Minimum",
            "description": "The start of the increment range"
          },
          "increment_maximum": {
            "type": "integer",
            "title": "Increment Maximum",
            "description": "The end of the increment range"
          },
          "optimized": {
            "type": "boolean",
            "title": "Optimized",
            "description": "Enable hashcat optimized mode"
          },
          "slow_candidate_generators": {
            "type": "boolean",
            "title": "Slow Candidate Generators",
            "description": "Enable slow candidate generators"
          },
          "workload_profile": {
            "type": "integer",
            "title": "Workload Profile",
            "description": "The hashcat workload profile"
          },
          "disable_markov": {
            "type": "boolean",
            "title": "Disable Markov",
            "description": "Disable hashcat markov mode"
          },
          "classic_markov": {
            "type": "boolean",
            "title": "Classic Markov",
            "description": "Enable hashcat classic markov mode"
          },
          "markov_threshold": {
            "type": "integer",
            "title": "Markov Threshold",
            "description": "The hashcat markov threshold"
          },
          "left_rule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Left Rule",
            "description": "The left-hand rule for combinator attacks"
          },
          "right_rule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Right Rule",
            "description": "The right-hand rule for combinator attacks"
          },
          "custom_charset_1": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 1",
            "description": "Custom charset 1 for hashcat mask attacks"
          },
          "custom_charset_2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 2",
            "description": "Custom charset 2 for hashcat mask attacks"
          },
          "custom_charset_3": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 3",
            "description": "Custom charset 3 for hashcat mask attacks"
          },
          "custom_charset_4": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 4",
            "description": "Custom charset 4 for hashcat mask attacks"
          },
          "hash_list_id": {
            "type": "integer",
            "title": "Hash List Id",
            "description": "The id of the hash list"
          },
          "word_list": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttackResourceFileOut"
              },
              {
                "type": "null"
              }
            ],
            "description": "Word list resource file"
          },
          "rule_list": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttackResourceFileOut"
              },
              {
                "type": "null"
              }
            ],
            "description": "Rule list resource file"
          },
          "mask_list": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttackResourceFileOut"
              },
              {
                "type": "null"
              }
            ],
            "description": "Mask list resource file"
          },
          "hash_mode": {
            "type": "integer",
            "title": "Hash Mode",
            "description": "The hashcat hash mode"
          },
          "hash_list_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hash List Url",
            "description": "The download URL for the hash list"
          },
          "hash_list_checksum": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hash List Checksum",
            "description": "The MD5 checksum of the hash list"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url",
            "description": "The URL to the attack"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "attack_mode",
          "attack_mode_hashcat",
          "increment_mode",
          "increment_minimum",
          "increment_maximum",
          "optimized",
          "slow_candidate_generators",
          "workload_profile",
          "disable_markov",
          "classic_markov",
          "markov_threshold",
          "hash_list_id",
          "hash_mode"
        ],
        "title": "AttackOutV1"
      },
      "AttackPerformanceSummary": {
        "properties": {
          "hashes_per_sec": {
            "type": "number",
            "title": "Hashes Per Sec",
            "description": "Aggregate hashes per second across all agents",
            "examples": [
              12345.67
            ]
          },
          "total_hashes": {
            "type": "integer",
            "title": "Total Hashes",
            "description": "Total number of hashes to process",
            "examples": [
              1000000
            ]
          },
          "agent_count": {
            "type": "integer",
            "title": "Agent Count",
            "description": "Number of agents participating in the attack",
            "examples": [
              3
            ]
          },
          "eta": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Eta",
            "description": "Estimated time to completion in seconds",
            "examples": [
              3600
            ]
          },
          "progress": {
            "type": "number",
            "title": "Progress",
            "description": "Progress percentage (0-100)",
            "examples": [
              42.5
            ]
          },
          "hashes_done": {
            "type": "integer",
            "title": "Hashes Done",
            "description": "Number of hashes processed so far",
            "examples": [
              425000
            ]
          },
          "attack": {
            "$ref": "#/components/schemas/AttackOut",
            "description": "Attack details"
          }
        },
        "type": "object",
        "required": [
          "hashes_per_sec",
          "total_hashes",
          "agent_count",
          "progress",
          "hashes_done",
          "attack"
        ],
        "title": "AttackPerformanceSummary",
        "description": "Performance summary for an attack, including speed, progress, and agent participation."
      },
      "AttackResourceFileOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "download_url": {
            "type": "string",
            "title": "Download Url"
          },
          "checksum": {
            "type": "string",
            "title": "Checksum"
          },
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "title": "Guid"
          },
          "resource_type": {
            "$ref": "#/components/schemas/AttackResourceType",
            "description": "Type of resource file"
          },
          "line_format": {
            "type": "string",
            "title": "Line Format",
            "description": "Format of each line in the resource file"
          },
          "line_encoding": {
            "type": "string",
            "title": "Line Encoding",
            "description": "Encoding of the resource file lines"
          },
          "used_for_modes": {
            "items": {
              "$ref": "#/components/schemas/AttackMode"
            },
            "type": "array",
            "title": "Used For Modes",
            "description": "Attack modes this resource is compatible with"
          },
          "source": {
            "type": "string",
            "title": "Source",
            "description": "Source of the resource file (upload, generated, linked)"
          },
          "line_count": {
            "type": "integer",
            "title": "Line Count",
            "description": "Number of lines in the resource file"
          },
          "byte_size": {
            "type": "integer",
            "title": "Byte Size",
            "description": "Size of the resource file in bytes"
          },
          "content": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "is_uploaded": {
            "type": "boolean",
            "title": "Is Uploaded",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "download_url",
          "checksum",
          "file_name",
          "guid",
          "resource_type",
          "line_format",
          "line_encoding",
          "used_for_modes",
          "source",
          "line_count",
          "byte_size"
        ],
        "title": "AttackResourceFileOut"
      },
      "AttackResourceType": {
        "type": "string",
        "enum": [
          "mask_list",
          "rule_list",
          "word_list",
          "charset",
          "dynamic_word_list",
          "ephemeral_word_list",
          "ephemeral_mask_list",
          "ephemeral_rule_list"
        ],
        "title": "AttackResourceType"
      },
      "AttackState": {
        "type": "string",
        "enum": [
          "pending",
          "running",
          "completed",
          "failed",
          "abandoned"
        ],
        "title": "AttackState"
      },
      "AttackSummary": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "attack_mode": {
            "$ref": "#/components/schemas/AttackMode"
          },
          "type_label": {
            "type": "string",
            "title": "Type Label"
          },
          "length": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Length"
          },
          "settings_summary": {
            "type": "string",
            "title": "Settings Summary"
          },
          "keyspace": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keyspace"
          },
          "complexity_score": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complexity Score"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "attack_mode",
          "type_label",
          "settings_summary"
        ],
        "title": "AttackSummary"
      },
      "AttackTemplate": {
        "properties": {
          "mode": {
            "$ref": "#/components/schemas/AttackMode",
            "description": "Attack mode (e.g., dictionary, mask, etc.)"
          },
          "wordlist_guid": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Wordlist Guid",
            "description": "GUID of the wordlist resource, if applicable"
          },
          "rulelist_guid": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rulelist Guid",
            "description": "GUID of the rule list resource, if applicable"
          },
          "masklist_guid": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Masklist Guid",
            "description": "GUID of the mask list resource, if applicable"
          },
          "min_length": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Length",
            "description": "Minimum password length"
          },
          "max_length": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Length",
            "description": "Maximum password length"
          },
          "masks": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Masks",
            "description": "List of mask patterns, if applicable"
          },
          "masks_inline": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Masks Inline",
            "description": "Ephemeral mask list lines, if inlined"
          },
          "wordlist_inline": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Wordlist Inline",
            "description": "Ephemeral wordlist lines, if inlined"
          },
          "rules_inline": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rules Inline",
            "description": "Ephemeral rule list lines, if inlined"
          },
          "position": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Position",
            "description": "Numeric ordering field within a campaign"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "User-provided description for UI display"
          }
        },
        "type": "object",
        "required": [
          "mode"
        ],
        "title": "AttackTemplate",
        "description": "JSON-compatible model for exporting/importing attack configurations in templates.\n\nFields:\n    - mode: Attack mode (e.g., dictionary, mask, etc.)\n    - wordlist_guid: GUID of the wordlist resource, if applicable\n    - rulelist_guid: GUID of the rule list resource, if applicable\n    - masklist_guid: GUID of the mask list resource, if applicable\n    - min_length: Minimum password length\n    - max_length: Maximum password length\n    - masks: List of mask patterns, if applicable\n    - masks_inline: Ephemeral mask list lines, if inlined\n    - wordlist_inline: Ephemeral wordlist lines, if inlined\n    - rules_inline: Ephemeral rule list lines, if inlined\n    - position: Numeric ordering field within a campaign\n    - comment: User-provided description for UI display"
      },
      "AttackTemplateRecordCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "attack_mode": {
            "type": "string",
            "title": "Attack Mode"
          },
          "recommended": {
            "type": "boolean",
            "title": "Recommended",
            "default": false
          },
          "project_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Ids"
          },
          "template_json": {
            "$ref": "#/components/schemas/AttackTemplate"
          }
        },
        "type": "object",
        "required": [
          "name",
          "attack_mode",
          "template_json"
        ],
        "title": "AttackTemplateRecordCreate"
      },
      "AttackTemplateRecordOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "attack_mode": {
            "type": "string",
            "title": "Attack Mode"
          },
          "recommended": {
            "type": "boolean",
            "title": "Recommended"
          },
          "project_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Ids"
          },
          "template_json": {
            "$ref": "#/components/schemas/AttackTemplate"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "attack_mode",
          "recommended",
          "template_json",
          "created_at"
        ],
        "title": "AttackTemplateRecordOut"
      },
      "AttackTemplateRecordUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "attack_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attack Mode"
          },
          "recommended": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recommended"
          },
          "project_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Ids"
          },
          "template_json": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttackTemplate"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "AttackTemplateRecordUpdate"
      },
      "AttackUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttackState"
              },
              {
                "type": "null"
              }
            ]
          },
          "attack_mode": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttackMode"
              },
              {
                "type": "null"
              }
            ]
          },
          "attack_mode_hashcat": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attack Mode Hashcat"
          },
          "hash_mode": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hash Mode"
          },
          "mask": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mask"
          },
          "increment_mode": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Increment Mode"
          },
          "increment_minimum": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Increment Minimum"
          },
          "increment_maximum": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Increment Maximum"
          },
          "optimized": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optimized"
          },
          "slow_candidate_generators": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slow Candidate Generators"
          },
          "workload_profile": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workload Profile"
          },
          "disable_markov": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Disable Markov"
          },
          "classic_markov": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Classic Markov"
          },
          "markov_threshold": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Markov Threshold"
          },
          "left_rule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Left Rule"
          },
          "right_rule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Right Rule"
          },
          "custom_charset_1": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 1"
          },
          "custom_charset_2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 2"
          },
          "custom_charset_3": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 3"
          },
          "custom_charset_4": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 4"
          },
          "hash_list_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hash List Id"
          },
          "word_list_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Word List Id"
          },
          "rule_list_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule List Id"
          },
          "mask_list_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mask List Id"
          },
          "hash_list_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hash List Url"
          },
          "hash_list_checksum": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hash List Checksum"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "position": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Position"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "campaign_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Campaign Id"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id"
          },
          "modifiers": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modifiers"
          },
          "wordlist_source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WordlistSource"
              },
              {
                "type": "null"
              }
            ]
          },
          "confirm": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confirm"
          },
          "wordlist_inline": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Wordlist Inline"
          },
          "masks_inline": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Masks Inline"
          }
        },
        "type": "object",
        "title": "AttackUpdate"
      },
      "Body_add_resource_line_api_v1_web_resources__resource_id__lines_post": {
        "properties": {
          "line": {
            "type": "string",
            "title": "Line",
            "description": "Line content to add"
          }
        },
        "type": "object",
        "required": [
          "line"
        ],
        "title": "Body_add_resource_line_api_v1_web_resources__resource_id__lines_post"
      },
      "Body_change_password_api_v1_web_auth_change_password_post": {
        "properties": {
          "old_password": {
            "type": "string",
            "title": "Old Password"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          },
          "new_password_confirm": {
            "type": "string",
            "title": "New Password Confirm"
          }
        },
        "type": "object",
        "required": [
          "old_password",
          "new_password",
          "new_password_confirm"
        ],
        "title": "Body_change_password_api_v1_web_auth_change_password_post"
      },
      "Body_jwt_login_api_v1_auth_jwt_login_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "Body_jwt_login_api_v1_auth_jwt_login_post"
      },
      "Body_login_api_v1_web_auth_login_post": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "Body_login_api_v1_web_auth_login_post"
      },
      "Body_refresh_token_api_v1_web_auth_refresh_post": {
        "properties": {
          "auto_refresh": {
            "type": "boolean",
            "title": "Auto Refresh",
            "default": false
          }
        },
        "type": "object",
        "title": "Body_refresh_token_api_v1_web_auth_refresh_post"
      },
      "Body_register_agent_api_v1_web_agents_post": {
        "properties": {
          "host_name": {
            "type": "string",
            "title": "Host Name",
            "description": "Agent host name"
          },
          "operating_system": {
            "$ref": "#/components/schemas/OperatingSystemEnum",
            "description": "Operating system"
          },
          "client_signature": {
            "type": "string",
            "title": "Client Signature",
            "description": "Client signature"
          },
          "custom_label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Label",
            "description": "Custom label"
          },
          "devices": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Devices",
            "description": "Comma-separated device list"
          },
          "agent_update_interval": {
            "type": "integer",
            "title": "Agent Update Interval",
            "description": "Agent update interval (seconds)",
            "default": 30
          },
          "use_native_hashcat": {
            "type": "boolean",
            "title": "Use Native Hashcat",
            "description": "Use native hashcat",
            "default": false
          },
          "backend_device": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backend Device",
            "description": "Backend device"
          },
          "opencl_devices": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Opencl Devices",
            "description": "OpenCL devices"
          },
          "enable_additional_hash_types": {
            "type": "boolean",
            "title": "Enable Additional Hash Types",
            "description": "Enable additional hash types",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "host_name",
          "operating_system",
          "client_signature"
        ],
        "title": "Body_register_agent_api_v1_web_agents_post"
      },
      "Body_test_agent_presigned_url_api_v1_web_agents__agent_id__test_presigned_post": {
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/AgentPresignedUrlTestRequest"
          }
        },
        "type": "object",
        "required": [
          "payload"
        ],
        "title": "Body_test_agent_presigned_url_api_v1_web_agents__agent_id__test_presigned_post"
      },
      "Body_toggle_agent_devices_api_v1_web_agents__agent_id__devices_patch": {
        "properties": {
          "enabled_indices": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Enabled Indices",
            "description": "List of enabled device indices"
          }
        },
        "type": "object",
        "required": [
          "enabled_indices"
        ],
        "title": "Body_toggle_agent_devices_api_v1_web_agents__agent_id__devices_patch"
      },
      "Body_update_agent_config_api_v1_web_agents__agent_id__config_patch": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/AdvancedAgentConfiguration"
          }
        },
        "type": "object",
        "required": [
          "config"
        ],
        "title": "Body_update_agent_config_api_v1_web_agents__agent_id__config_patch"
      },
      "Body_update_agent_hardware_api_v1_web_agents__agent_id__hardware_patch": {
        "properties": {
          "hwmon_temp_abort": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hwmon Temp Abort",
            "description": "Temperature abort threshold in Celsius for hashcat (--hwmon-temp-abort)"
          },
          "opencl_devices": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Opencl Devices",
            "description": "The OpenCL device types to use for hashcat, separated by commas"
          },
          "backend_ignore_cuda": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backend Ignore Cuda",
            "description": "Ignore CUDA backend (--backend-ignore-cuda)"
          },
          "backend_ignore_opencl": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backend Ignore Opencl",
            "description": "Ignore OpenCL backend (--backend-ignore-opencl)"
          },
          "backend_ignore_hip": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backend Ignore Hip",
            "description": "Ignore HIP backend (--backend-ignore-hip)"
          },
          "backend_ignore_metal": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backend Ignore Metal",
            "description": "Ignore Metal backend (--backend-ignore-metal)"
          }
        },
        "type": "object",
        "title": "Body_update_agent_hardware_api_v1_web_agents__agent_id__hardware_patch"
      },
      "Body_update_resource_content_api_v1_web_resources__resource_id__content_patch": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content",
            "description": "The new content to update"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "Body_update_resource_content_api_v1_web_resources__resource_id__content_patch"
      },
      "Body_update_resource_line_api_v1_web_resources__resource_id__lines__line_id__patch": {
        "properties": {
          "line": {
            "type": "string",
            "title": "Line",
            "description": "New line content"
          }
        },
        "type": "object",
        "required": [
          "line"
        ],
        "title": "Body_update_resource_line_api_v1_web_resources__resource_id__lines__line_id__patch"
      },
      "Body_upload_resource_metadata_api_v1_web_resources__post": {
        "properties": {
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "resource_type": {
            "type": "string",
            "title": "Resource Type"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "detect_type": {
            "type": "boolean",
            "title": "Detect Type",
            "default": false
          },
          "line_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Format"
          },
          "line_encoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Encoding"
          },
          "used_for_modes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Used For Modes"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source"
          },
          "file_label": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "File Label"
          },
          "tags": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "file_name",
          "resource_type"
        ],
        "title": "Body_upload_resource_metadata_api_v1_web_resources__post"
      },
      "Body_upload_resource_metadata_api_v1_web_uploads__post": {
        "properties": {
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "file_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Name"
          },
          "file_label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Label"
          },
          "text_content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Content"
          }
        },
        "type": "object",
        "required": [
          "project_id"
        ],
        "title": "Body_upload_resource_metadata_api_v1_web_uploads__post"
      },
      "BruteForceMaskRequest": {
        "properties": {
          "charset_options": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Charset Options",
            "description": "List of charset options, e.g. ['lowercase', 'numbers']"
          },
          "length": {
            "type": "integer",
            "title": "Length",
            "description": "Length of the mask to generate"
          }
        },
        "type": "object",
        "required": [
          "charset_options",
          "length"
        ],
        "title": "BruteForceMaskRequest"
      },
      "BruteForceMaskResponse": {
        "properties": {
          "mask": {
            "type": "string",
            "title": "Mask",
            "description": "Generated mask string, e.g. '?1?1?1'",
            "examples": [
              "?1?1?1"
            ]
          },
          "custom_charset": {
            "type": "string",
            "title": "Custom Charset",
            "description": "Custom charset string, e.g. '?1=?l?d'",
            "examples": [
              "?1=?l?d"
            ]
          }
        },
        "type": "object",
        "required": [
          "mask",
          "custom_charset"
        ],
        "title": "BruteForceMaskResponse"
      },
      "CampaignCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 128,
            "title": "Name",
            "description": "Campaign name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Campaign description"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id",
            "description": "Project ID"
          },
          "priority": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Priority",
            "description": "Campaign priority",
            "default": 0
          },
          "hash_list_id": {
            "type": "integer",
            "title": "Hash List Id",
            "description": "Hash list ID"
          },
          "is_unavailable": {
            "type": "boolean",
            "title": "Is Unavailable",
            "description": "True if the campaign is not yet ready for use",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "project_id",
          "hash_list_id"
        ],
        "title": "CampaignCreate"
      },
      "CampaignDetailResponse": {
        "properties": {
          "campaign": {
            "$ref": "#/components/schemas/CampaignRead"
          },
          "attacks": {
            "items": {
              "$ref": "#/components/schemas/AttackSummary"
            },
            "type": "array",
            "title": "Attacks"
          }
        },
        "type": "object",
        "required": [
          "campaign",
          "attacks"
        ],
        "title": "CampaignDetailResponse"
      },
      "CampaignListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/CampaignRead"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size",
          "total_pages"
        ],
        "title": "CampaignListResponse"
      },
      "CampaignMetrics": {
        "properties": {
          "total_hashes": {
            "type": "integer",
            "title": "Total Hashes",
            "description": "Total number of hashes"
          },
          "cracked_hashes": {
            "type": "integer",
            "title": "Cracked Hashes",
            "description": "Number of cracked hashes"
          },
          "uncracked_hashes": {
            "type": "integer",
            "title": "Uncracked Hashes",
            "description": "Number of uncracked hashes"
          },
          "percent_cracked": {
            "type": "number",
            "title": "Percent Cracked",
            "description": "Percentage of cracked hashes"
          },
          "progress_percent": {
            "type": "number",
            "title": "Progress Percent",
            "description": "Progress percentage"
          }
        },
        "type": "object",
        "required": [
          "total_hashes",
          "cracked_hashes",
          "uncracked_hashes",
          "percent_cracked",
          "progress_percent"
        ],
        "title": "CampaignMetrics"
      },
      "CampaignProgress": {
        "properties": {
          "total_tasks": {
            "type": "integer",
            "title": "Total Tasks",
            "description": "Total number of tasks in the campaign",
            "default": 0
          },
          "active_agents": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Active Agents",
            "description": "Number of active agents in the campaign",
            "default": 0
          },
          "completed_tasks": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Completed Tasks",
            "description": "Number of completed tasks in the campaign",
            "default": 0
          },
          "pending_tasks": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Pending Tasks",
            "description": "Number of pending tasks in the campaign",
            "default": 0
          },
          "active_tasks": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Active Tasks",
            "description": "Number of active tasks in the campaign",
            "default": 0
          },
          "failed_tasks": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Failed Tasks",
            "description": "Number of failed tasks in the campaign",
            "default": 0
          },
          "percentage_complete": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Percentage Complete",
            "description": "Percentage of completed tasks",
            "default": 0
          },
          "overall_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskStatus",
                "ge": 0
              },
              {
                "type": "null"
              }
            ],
            "description": "Overall status of the campaign"
          },
          "active_attack_id": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Active Attack Id",
            "description": "ID of the active attack in the campaign"
          }
        },
        "type": "object",
        "title": "CampaignProgress"
      },
      "CampaignRead": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 128,
            "title": "Name",
            "description": "Campaign name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Campaign description"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id",
            "description": "Project ID"
          },
          "priority": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Priority",
            "description": "Campaign priority",
            "default": 0
          },
          "hash_list_id": {
            "type": "integer",
            "title": "Hash List Id",
            "description": "Hash list ID"
          },
          "is_unavailable": {
            "type": "boolean",
            "title": "Is Unavailable",
            "description": "True if the campaign is not yet ready for use",
            "default": false
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Campaign ID"
          },
          "state": {
            "$ref": "#/components/schemas/CampaignState",
            "description": "Campaign state"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "name",
          "project_id",
          "hash_list_id",
          "id",
          "state",
          "created_at",
          "updated_at"
        ],
        "title": "CampaignRead"
      },
      "CampaignState": {
        "type": "string",
        "enum": [
          "draft",
          "active",
          "archived",
          "paused",
          "completed",
          "error"
        ],
        "title": "CampaignState"
      },
      "CampaignTemplate-Input": {
        "properties": {
          "schema_version": {
            "type": "string",
            "title": "Schema Version",
            "description": "Schema version for compatibility",
            "default": "20250511"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Campaign name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Campaign description"
          },
          "attacks": {
            "items": {
              "$ref": "#/components/schemas/AttackTemplate"
            },
            "type": "array",
            "title": "Attacks",
            "description": "List of attack templates",
            "default": []
          },
          "hash_list_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hash List Id",
            "description": "ID of the hash list to use"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CampaignTemplate",
        "description": "Top-level structure for campaign import/export, including attacks and hash list reference."
      },
      "CampaignTemplate-Output": {
        "properties": {
          "schema_version": {
            "type": "string",
            "title": "Schema Version",
            "description": "Schema version for compatibility",
            "default": "20250511"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Campaign name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Campaign description"
          },
          "attacks": {
            "items": {
              "$ref": "#/components/schemas/AttackTemplate"
            },
            "type": "array",
            "title": "Attacks",
            "description": "List of attack templates",
            "default": []
          },
          "hash_list_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hash List Id",
            "description": "ID of the hash list to use"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CampaignTemplate",
        "description": "Top-level structure for campaign import/export, including attacks and hash list reference."
      },
      "CampaignUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Campaign name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Campaign description"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority",
            "description": "Campaign priority"
          }
        },
        "type": "object",
        "title": "CampaignUpdate"
      },
      "CampaignWithAttacks": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 128,
            "title": "Name",
            "description": "Campaign name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Campaign description"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id",
            "description": "Project ID"
          },
          "priority": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Priority",
            "description": "Campaign priority",
            "default": 0
          },
          "hash_list_id": {
            "type": "integer",
            "title": "Hash List Id",
            "description": "Hash list ID"
          },
          "is_unavailable": {
            "type": "boolean",
            "title": "Is Unavailable",
            "description": "True if the campaign is not yet ready for use",
            "default": false
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Campaign ID"
          },
          "state": {
            "$ref": "#/components/schemas/CampaignState",
            "description": "Campaign state"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          },
          "attacks": {
            "items": {},
            "type": "array",
            "title": "Attacks",
            "description": "List of attacks"
          }
        },
        "type": "object",
        "required": [
          "name",
          "project_id",
          "hash_list_id",
          "id",
          "state",
          "created_at",
          "updated_at",
          "attacks"
        ],
        "title": "CampaignWithAttacks"
      },
      "ContextResponse": {
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserContextDetail",
            "description": "User context"
          },
          "active_project": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectContextDetail"
              },
              {
                "type": "null"
              }
            ],
            "description": "Active project context"
          },
          "available_projects": {
            "items": {
              "$ref": "#/components/schemas/ProjectContextDetail"
            },
            "type": "array",
            "title": "Available Projects",
            "description": "Available projects"
          }
        },
        "type": "object",
        "required": [
          "user",
          "active_project",
          "available_projects"
        ],
        "title": "ContextResponse"
      },
      "CrackerUpdateResponse": {
        "properties": {
          "available": {
            "type": "boolean",
            "title": "Available",
            "description": "A new version of the cracker binary is available"
          },
          "latest_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latest Version",
            "description": "The latest version of the cracker binary"
          },
          "download_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Url",
            "description": "The download URL of the new version"
          },
          "exec_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exec Name",
            "description": "The name of the executable"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "A message about the update"
          }
        },
        "type": "object",
        "required": [
          "available"
        ],
        "title": "CrackerUpdateResponse"
      },
      "DashboardSummary": {
        "properties": {
          "active_agents": {
            "type": "integer",
            "title": "Active Agents",
            "description": "Number of agents currently online and accessible (not stopped, error, or offline)"
          },
          "total_agents": {
            "type": "integer",
            "title": "Total Agents",
            "description": "Total number of agents in the system (includes stopped, error, and offline)"
          },
          "running_tasks": {
            "type": "integer",
            "title": "Running Tasks",
            "description": "Number of currently running tasks (only includes attacks with tasks being actively processed)"
          },
          "total_tasks": {
            "type": "integer",
            "title": "Total Tasks",
            "description": "Total number of tasks (includes pending, running, and failed tasks)"
          },
          "recently_cracked_hashes": {
            "type": "integer",
            "title": "Recently Cracked Hashes",
            "description": "Number of recently cracked hashes (last 24 hours, not including duplicates)"
          },
          "resource_usage": {
            "items": {
              "$ref": "#/components/schemas/ResourceUsagePoint"
            },
            "type": "array",
            "title": "Resource Usage",
            "description": "Resource usage points (hash rate over last 12 hours, 1h intervals)"
          }
        },
        "type": "object",
        "required": [
          "active_agents",
          "total_agents",
          "running_tasks",
          "total_tasks",
          "recently_cracked_hashes",
          "resource_usage"
        ],
        "title": "DashboardSummary"
      },
      "DevicePerformancePoint": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "UTC timestamp for the measurement"
          },
          "speed": {
            "type": "number",
            "title": "Speed",
            "description": "Guesses/sec at this timestamp"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "speed"
        ],
        "title": "DevicePerformancePoint",
        "description": "A single time series point for device performance."
      },
      "DevicePerformanceSeries": {
        "properties": {
          "device": {
            "type": "string",
            "title": "Device",
            "description": "Device name as reported by agent"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/DevicePerformancePoint"
            },
            "type": "array",
            "title": "Data",
            "description": "Time series data points"
          }
        },
        "type": "object",
        "required": [
          "device",
          "data"
        ],
        "title": "DevicePerformanceSeries",
        "description": "Time series for a single device on an agent."
      },
      "DeviceStatus": {
        "properties": {
          "device_id": {
            "type": "integer",
            "title": "Device Id",
            "description": "The id of the device"
          },
          "device_name": {
            "type": "string",
            "title": "Device Name",
            "description": "The name of the device"
          },
          "device_type": {
            "type": "string",
            "title": "Device Type",
            "description": "The type of the device",
            "examples": [
              "CPU",
              "GPU"
            ]
          },
          "speed": {
            "type": "integer",
            "title": "Speed",
            "description": "The speed of the device"
          },
          "utilization": {
            "type": "integer",
            "title": "Utilization",
            "description": "The utilization of the device"
          },
          "temperature": {
            "type": "integer",
            "title": "Temperature",
            "description": "The temperature of the device, or -1 if unmonitored."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "device_id",
          "device_name",
          "device_type",
          "speed",
          "utilization",
          "temperature"
        ],
        "title": "DeviceStatus"
      },
      "ErrorObject": {
        "properties": {
          "error": {
            "type": "string",
            "title": "Error",
            "description": "Error message"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "error"
        ],
        "title": "ErrorObject"
      },
      "EstimateAttackRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Attack name",
            "examples": [
              "Test Attack"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Attack description",
            "examples": [
              "Test"
            ]
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttackState"
              },
              {
                "type": "null"
              }
            ]
          },
          "hash_type_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hash Type Id"
          },
          "attack_mode": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttackMode"
              },
              {
                "type": "null"
              }
            ]
          },
          "attack_mode_hashcat": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attack Mode Hashcat"
          },
          "hash_mode": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hash Mode"
          },
          "mask": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mask"
          },
          "increment_mode": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Increment Mode"
          },
          "increment_minimum": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Increment Minimum"
          },
          "increment_maximum": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Increment Maximum"
          },
          "optimized": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optimized"
          },
          "slow_candidate_generators": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slow Candidate Generators"
          },
          "workload_profile": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workload Profile"
          },
          "disable_markov": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Disable Markov"
          },
          "classic_markov": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Classic Markov"
          },
          "markov_threshold": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Markov Threshold"
          },
          "left_rule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Left Rule"
          },
          "right_rule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Right Rule"
          },
          "custom_charset_1": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 1"
          },
          "custom_charset_2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 2"
          },
          "custom_charset_3": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 3"
          },
          "custom_charset_4": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Charset 4"
          },
          "hash_list_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hash List Id"
          },
          "hash_list_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hash List Url"
          },
          "hash_list_checksum": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hash List Checksum"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "position": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Position"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "campaign_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Campaign Id"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id"
          },
          "wordlist_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Wordlist Size"
          },
          "rule_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule Count"
          }
        },
        "type": "object",
        "title": "EstimateAttackRequest",
        "description": "Request model for attack keyspace/complexity estimation.\nAccepts partial or full attack config fields for unsaved attacks."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HashGuessCandidate": {
        "properties": {
          "hash_type": {
            "type": "integer",
            "title": "Hash Type"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence"
          }
        },
        "type": "object",
        "required": [
          "hash_type",
          "name",
          "confidence"
        ],
        "title": "HashGuessCandidate"
      },
      "HashGuessResponse": {
        "properties": {
          "candidates": {
            "items": {
              "$ref": "#/components/schemas/HashGuessCandidate"
            },
            "type": "array",
            "title": "Candidates"
          }
        },
        "type": "object",
        "required": [
          "candidates"
        ],
        "title": "HashGuessResponse"
      },
      "HashGuessResults": {
        "properties": {
          "candidates": {
            "items": {
              "$ref": "#/components/schemas/HashGuessCandidate"
            },
            "type": "array",
            "title": "Candidates"
          }
        },
        "type": "object",
        "required": [
          "candidates"
        ],
        "title": "HashGuessResults"
      },
      "HashItemOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Unique identifier for the hash item"
          },
          "hash": {
            "type": "string",
            "title": "Hash",
            "description": "Hash value"
          },
          "salt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Salt",
            "description": "Salt value, if present"
          },
          "meta": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta",
            "description": "User-defined metadata for the hash item"
          },
          "plain_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Plain Text",
            "description": "Cracked plain text, if available"
          }
        },
        "type": "object",
        "required": [
          "id",
          "hash"
        ],
        "title": "HashItemOut"
      },
      "HashListCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "Name",
            "description": "Name of the hash list"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 512
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the hash list"
          },
          "project_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Project Id",
            "description": "Project ID"
          },
          "hash_type_id": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Hash Type Id",
            "description": "Hash type ID"
          },
          "is_unavailable": {
            "type": "boolean",
            "title": "Is Unavailable",
            "description": "True if the hash list is not yet ready for use",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "project_id",
          "hash_type_id"
        ],
        "title": "HashListCreate",
        "description": "Schema for creating a new hash list."
      },
      "HashListOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Unique identifier for the hash list"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name of the hash list"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the hash list"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id",
            "description": "Project ID"
          },
          "hash_type_id": {
            "type": "integer",
            "title": "Hash Type Id",
            "description": "Hash type ID"
          },
          "is_unavailable": {
            "type": "boolean",
            "title": "Is Unavailable",
            "description": "True if the hash list is not yet ready for use"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/HashItemOut"
            },
            "type": "array",
            "title": "Items",
            "description": "Hashes in the hash list"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "project_id",
          "hash_type_id",
          "is_unavailable",
          "items",
          "created_at",
          "updated_at"
        ],
        "title": "HashListOut"
      },
      "HashListUpdateData": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name of the hash list"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 512
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the hash list"
          },
          "is_unavailable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Unavailable",
            "description": "True if the hash list is not yet ready for use"
          }
        },
        "type": "object",
        "title": "HashListUpdateData",
        "description": "Schema for updating a hash list."
      },
      "HashTypeDropdownItem": {
        "properties": {
          "mode": {
            "type": "integer",
            "title": "Mode"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "confidence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence"
          }
        },
        "type": "object",
        "required": [
          "mode",
          "name",
          "category"
        ],
        "title": "HashTypeDropdownItem"
      },
      "HashcatBenchmark": {
        "properties": {
          "hash_type": {
            "type": "integer",
            "title": "Hash Type",
            "description": "The hashcat hash type"
          },
          "runtime": {
            "type": "integer",
            "title": "Runtime",
            "description": "The runtime of the benchmark in milliseconds"
          },
          "hash_speed": {
            "type": "number",
            "title": "Hash Speed",
            "description": "The speed of the benchmark in hashes per second"
          },
          "device": {
            "type": "integer",
            "title": "Device",
            "description": "The device used for the benchmark"
          }
        },
        "type": "object",
        "required": [
          "hash_type",
          "runtime",
          "hash_speed",
          "device"
        ],
        "title": "HashcatBenchmark",
        "description": "Schema for hashcat benchmark results."
      },
      "HashcatGuess": {
        "properties": {
          "guess_base": {
            "type": "string",
            "title": "Guess Base",
            "description": "The base value used for the guess (for example, the mask)"
          },
          "guess_base_count": {
            "type": "integer",
            "title": "Guess Base Count",
            "description": "The number of times the base value was used"
          },
          "guess_base_offset": {
            "type": "integer",
            "title": "Guess Base Offset",
            "description": "The offset of the base value"
          },
          "guess_base_percentage": {
            "type": "number",
            "title": "Guess Base Percentage",
            "description": "The percentage completion of the base value"
          },
          "guess_mod": {
            "type": "string",
            "title": "Guess Mod",
            "description": "The modifier used for the guess (for example, the wordlist)"
          },
          "guess_mod_count": {
            "type": "integer",
            "title": "Guess Mod Count",
            "description": "The number of times the modifier was used"
          },
          "guess_mod_offset": {
            "type": "integer",
            "title": "Guess Mod Offset",
            "description": "The offset of the modifier"
          },
          "guess_mod_percentage": {
            "type": "number",
            "title": "Guess Mod Percentage",
            "description": "The percentage completion of the modifier"
          },
          "guess_mode": {
            "type": "integer",
            "title": "Guess Mode",
            "description": "The mode used for the guess"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "guess_base",
          "guess_base_count",
          "guess_base_offset",
          "guess_base_percentage",
          "guess_mod",
          "guess_mod_count",
          "guess_mod_offset",
          "guess_mod_percentage",
          "guess_mode"
        ],
        "title": "HashcatGuess"
      },
      "HashcatResult": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "The time the hash was cracked"
          },
          "hash": {
            "type": "string",
            "title": "Hash",
            "description": "The hash value"
          },
          "plain_text": {
            "type": "string",
            "title": "Plain Text",
            "description": "The plain text value"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "timestamp",
          "hash",
          "plain_text"
        ],
        "title": "HashcatResult"
      },
      "ListProjectsResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ProjectRead"
            },
            "type": "array",
            "title": "Items",
            "description": "List of items"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "page": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Page",
            "description": "Current page number",
            "default": 1
          },
          "page_size": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Page Size",
            "description": "Number of items per page",
            "default": 20
          },
          "search": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search",
            "description": "Search query"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "ListProjectsResponse"
      },
      "LoginResult": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Result message",
            "examples": [
              "Login successful."
            ]
          },
          "level": {
            "$ref": "#/components/schemas/LoginResultLevel",
            "description": "Result level",
            "examples": [
              "success"
            ]
          },
          "access_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Token",
            "description": "JWT access token"
          }
        },
        "type": "object",
        "required": [
          "message",
          "level"
        ],
        "title": "LoginResult"
      },
      "LoginResultLevel": {
        "type": "string",
        "enum": [
          "success",
          "error"
        ],
        "title": "LoginResultLevel"
      },
      "MaskValidationRequest": {
        "properties": {
          "mask": {
            "type": "string",
            "title": "Mask",
            "description": "Hashcat mask string to validate",
            "examples": [
              "?l?l?d?d"
            ]
          }
        },
        "type": "object",
        "required": [
          "mask"
        ],
        "title": "MaskValidationRequest"
      },
      "MaskValidationResponse": {
        "properties": {
          "valid": {
            "type": "boolean",
            "title": "Valid",
            "description": "Whether the mask is valid",
            "examples": [
              true
            ]
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Validation error message if invalid",
            "examples": [
              "Invalid mask syntax"
            ]
          }
        },
        "type": "object",
        "required": [
          "valid"
        ],
        "title": "MaskValidationResponse"
      },
      "MinioHealth": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "MinIO service status: healthy, degraded, unreachable"
          },
          "latency": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency",
            "description": "API response time in seconds"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if any"
          },
          "bucket_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bucket Count",
            "description": "Number of buckets"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "MinioHealth"
      },
      "MinioHealthDetailed": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "MinIO service status: healthy, degraded, unreachable"
          },
          "latency": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency",
            "description": "API response time in seconds"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if any"
          },
          "bucket_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bucket Count",
            "description": "Number of buckets"
          },
          "object_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Object Count",
            "description": "Total number of objects across all buckets"
          },
          "storage_usage": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Usage",
            "description": "Total storage usage in bytes"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "MinioHealthDetailed",
        "description": "Extended MinIO health information for admin users"
      },
      "OffsetPaginatedResponse_CampaignRead_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/CampaignRead"
            },
            "type": "array",
            "title": "Items",
            "description": "List of items"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "description": "Number of items requested"
          },
          "offset": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Offset",
            "description": "Number of items skipped"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "limit",
          "offset"
        ],
        "title": "OffsetPaginatedResponse[CampaignRead]"
      },
      "OperatingSystemEnum": {
        "type": "string",
        "enum": [
          "linux",
          "windows",
          "macos",
          "other"
        ],
        "title": "OperatingSystemEnum"
      },
      "PaginatedResponse_HashListOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/HashListOut"
            },
            "type": "array",
            "title": "Items",
            "description": "List of items"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "page": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Page",
            "description": "Current page number",
            "default": 1
          },
          "page_size": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Page Size",
            "description": "Number of items per page",
            "default": 20
          },
          "search": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search",
            "description": "Search query"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "PaginatedResponse[HashListOut]"
      },
      "PaginatedUserList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/UserRead"
            },
            "type": "array",
            "title": "Items",
            "description": "List of items"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "page": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Page",
            "description": "Current page number",
            "default": 1
          },
          "page_size": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Page Size",
            "description": "Number of items per page",
            "default": 20
          },
          "search": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search",
            "description": "Search query"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "PaginatedUserList"
      },
      "PostgresHealth": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "PostgreSQL service status: healthy, degraded, unreachable"
          },
          "latency": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency",
            "description": "Query roundtrip time in seconds"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if any"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "PostgresHealth"
      },
      "PostgresHealthDetailed": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "PostgreSQL service status: healthy, degraded, unreachable"
          },
          "latency": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency",
            "description": "Query roundtrip time in seconds"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if any"
          },
          "active_connections": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active Connections",
            "description": "Number of active connections"
          },
          "max_connections": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Connections",
            "description": "Maximum allowed connections"
          },
          "long_running_queries": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Long Running Queries",
            "description": "Number of long-running queries (>30s)"
          },
          "database_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Database Size",
            "description": "Database size in bytes"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "PostgresHealthDetailed",
        "description": "Extended PostgreSQL health information for admin users"
      },
      "ProjectContextDetail": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "ProjectContextDetail"
      },
      "ProjectCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "private": {
            "type": "boolean",
            "title": "Private",
            "default": false
          },
          "archived_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Archived At"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "users": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Users"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ProjectCreate",
        "description": "Schema for creating a new project."
      },
      "ProjectListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ProjectRead"
            },
            "type": "array",
            "title": "Items",
            "description": "List of items"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "description": "Number of items requested"
          },
          "offset": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Offset",
            "description": "Number of items skipped"
          },
          "search": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "limit",
          "offset"
        ],
        "title": "ProjectListResponse"
      },
      "ProjectRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "private": {
            "type": "boolean",
            "title": "Private"
          },
          "archived_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Archived At"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "users": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Users"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "private",
          "users",
          "created_at",
          "updated_at"
        ],
        "title": "ProjectRead",
        "description": "Schema for reading project data."
      },
      "ProjectUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "private": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Private"
          },
          "archived_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Archived At"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "users": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Users"
          }
        },
        "type": "object",
        "title": "ProjectUpdate",
        "description": "Schema for updating project data."
      },
      "ProjectUsersResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/UserRead"
            },
            "type": "array",
            "title": "Items",
            "description": "List of items"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "description": "Number of items requested"
          },
          "offset": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Offset",
            "description": "Number of items skipped"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "limit",
          "offset"
        ],
        "title": "ProjectUsersResponse"
      },
      "QueueHealth": {
        "type": "string",
        "enum": [
          "healthy",
          "degraded",
          "unhealthy"
        ],
        "title": "QueueHealth",
        "description": "Health of a queue."
      },
      "QueueStatus": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Queue name"
          },
          "type": {
            "$ref": "#/components/schemas/QueueType",
            "description": "Queue type",
            "default": "asyncio"
          },
          "pending_jobs": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Pending Jobs",
            "description": "Number of pending jobs",
            "default": 0
          },
          "running_jobs": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Running Jobs",
            "description": "Number of running jobs",
            "default": 0
          },
          "failed_jobs": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Failed Jobs",
            "description": "Number of failed jobs",
            "default": 0
          },
          "status": {
            "$ref": "#/components/schemas/StatusEnum",
            "description": "Queue status",
            "default": "active"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "QueueStatus",
        "description": "Status information for a single queue."
      },
      "QueueStatusResponse": {
        "properties": {
          "overall_status": {
            "$ref": "#/components/schemas/QueueHealth",
            "description": "Overall queue system health",
            "default": "healthy"
          },
          "redis_available": {
            "type": "boolean",
            "title": "Redis Available",
            "description": "Whether Redis is available",
            "default": true
          },
          "redis_memory_usage": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redis Memory Usage",
            "description": "Redis memory usage in bytes"
          },
          "redis_connections": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redis Connections",
            "description": "Number of active Redis connections"
          },
          "queues": {
            "items": {
              "$ref": "#/components/schemas/QueueStatus"
            },
            "type": "array",
            "title": "Queues",
            "description": "Individual queue statuses",
            "default": []
          },
          "total_pending_jobs": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Total Pending Jobs",
            "description": "Total pending jobs across all queues",
            "default": 0
          },
          "total_running_jobs": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Total Running Jobs",
            "description": "Total running jobs across all queues",
            "default": 0
          },
          "recent_activity": {
            "$ref": "#/components/schemas/RecentActivityStats",
            "description": "Recent activity metrics",
            "default": {
              "tasks_last_hour": 0
            }
          }
        },
        "type": "object",
        "title": "QueueStatusResponse",
        "description": "Comprehensive queue status response."
      },
      "QueueType": {
        "type": "string",
        "enum": [
          "asyncio",
          "celery",
          "rabbitmq",
          "redis"
        ],
        "title": "QueueType",
        "description": "Type of queue."
      },
      "RecentActivityStats": {
        "properties": {
          "tasks_last_hour": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Tasks Last Hour",
            "description": "Tasks created in the last hour",
            "default": 0
          }
        },
        "type": "object",
        "title": "RecentActivityStats",
        "description": "Recent activity statistics."
      },
      "RedisHealth": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Redis service status: healthy, degraded, unreachable"
          },
          "latency": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency",
            "description": "Command roundtrip time in seconds"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if any"
          },
          "memory_usage": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Usage",
            "description": "Memory usage in bytes"
          },
          "active_connections": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active Connections",
            "description": "Number of active connections"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "RedisHealth"
      },
      "RedisHealthDetailed": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Redis service status: healthy, degraded, unreachable"
          },
          "latency": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency",
            "description": "Command roundtrip time in seconds"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if any"
          },
          "memory_usage": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Usage",
            "description": "Memory usage in bytes"
          },
          "active_connections": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active Connections",
            "description": "Number of active connections"
          },
          "keyspace_keys": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keyspace Keys",
            "description": "Total number of keys in keyspace"
          },
          "evicted_keys": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evicted Keys",
            "description": "Number of evicted keys"
          },
          "expired_keys": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expired Keys",
            "description": "Number of expired keys"
          },
          "max_memory": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Memory",
            "description": "Maximum memory limit in bytes"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "RedisHealthDetailed",
        "description": "Extended Redis health information for admin users"
      },
      "ReorderAttacksRequest": {
        "properties": {
          "attack_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Attack Ids",
            "description": "List of attack IDs in the desired order"
          }
        },
        "type": "object",
        "required": [
          "attack_ids"
        ],
        "title": "ReorderAttacksRequest"
      },
      "ReorderAttacksResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Success"
          },
          "new_order": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "New Order",
            "description": "New order of attack IDs"
          }
        },
        "type": "object",
        "required": [
          "success",
          "new_order"
        ],
        "title": "ReorderAttacksResponse"
      },
      "ResourceContentResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "file_label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Label"
          },
          "resource_type": {
            "$ref": "#/components/schemas/AttackResourceType"
          },
          "line_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Count"
          },
          "byte_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Byte Size"
          },
          "checksum": {
            "type": "string",
            "title": "Checksum",
            "default": ""
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "line_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Format"
          },
          "line_encoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Encoding"
          },
          "used_for_modes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Used For Modes"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "unrestricted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unrestricted"
          },
          "is_uploaded": {
            "type": "boolean",
            "title": "Is Uploaded",
            "default": false
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "editable": {
            "type": "boolean",
            "title": "Editable"
          }
        },
        "type": "object",
        "required": [
          "id",
          "file_name",
          "resource_type",
          "content",
          "editable"
        ],
        "title": "ResourceContentResponse"
      },
      "ResourceDetailResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "file_label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Label"
          },
          "resource_type": {
            "$ref": "#/components/schemas/AttackResourceType"
          },
          "line_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Count"
          },
          "byte_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Byte Size"
          },
          "checksum": {
            "type": "string",
            "title": "Checksum",
            "default": ""
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "line_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Format"
          },
          "line_encoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Encoding"
          },
          "used_for_modes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Used For Modes"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "unrestricted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unrestricted"
          },
          "is_uploaded": {
            "type": "boolean",
            "title": "Is Uploaded",
            "default": false
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "attacks": {
            "items": {
              "$ref": "#/components/schemas/AttackBasic"
            },
            "type": "array",
            "title": "Attacks"
          }
        },
        "type": "object",
        "required": [
          "id",
          "file_name",
          "resource_type",
          "attacks"
        ],
        "title": "ResourceDetailResponse"
      },
      "ResourceDropdownItem": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Resource ID"
          },
          "file_name": {
            "type": "string",
            "title": "File Name",
            "description": "Resource file name"
          },
          "resource_type": {
            "$ref": "#/components/schemas/AttackResourceType"
          },
          "line_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Count",
            "description": "Number of lines in the resource"
          },
          "byte_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Byte Size",
            "description": "Size of the resource in bytes"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Last updated timestamp"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id",
            "description": "Project ID, if the resource is linked to a project"
          },
          "unrestricted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unrestricted",
            "description": "Whether the resource is visible to all system users or limited to a specific project"
          }
        },
        "type": "object",
        "required": [
          "id",
          "file_name",
          "resource_type"
        ],
        "title": "ResourceDropdownItem"
      },
      "ResourceLine": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Unique line identifier (index in file or DB)"
          },
          "index": {
            "type": "integer",
            "title": "Index",
            "description": "Line index (0-based)"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Content of the line"
          },
          "valid": {
            "type": "boolean",
            "title": "Valid",
            "description": "Whether the line is valid according to resource type validation"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "Validation error message, if any"
          }
        },
        "type": "object",
        "required": [
          "id",
          "index",
          "content",
          "valid"
        ],
        "title": "ResourceLine"
      },
      "ResourceLinesResponse": {
        "properties": {
          "lines": {
            "items": {
              "$ref": "#/components/schemas/ResourceLine"
            },
            "type": "array",
            "title": "Lines"
          },
          "resource_id": {
            "type": "string",
            "format": "uuid",
            "title": "Resource Id"
          }
        },
        "type": "object",
        "required": [
          "lines",
          "resource_id"
        ],
        "title": "ResourceLinesResponse"
      },
      "ResourceListItem": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "file_label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Label"
          },
          "resource_type": {
            "$ref": "#/components/schemas/AttackResourceType"
          },
          "line_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Count"
          },
          "byte_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Byte Size"
          },
          "checksum": {
            "type": "string",
            "title": "Checksum",
            "default": ""
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "line_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Format"
          },
          "line_encoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Encoding"
          },
          "used_for_modes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Used For Modes"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "unrestricted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unrestricted"
          },
          "is_uploaded": {
            "type": "boolean",
            "title": "Is Uploaded",
            "default": false
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "id",
          "file_name",
          "resource_type"
        ],
        "title": "ResourceListItem"
      },
      "ResourceListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ResourceListItem"
            },
            "type": "array",
            "title": "Items",
            "description": "List of items"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "page": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Page",
            "description": "Current page number",
            "default": 1
          },
          "page_size": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Page Size",
            "description": "Number of items per page",
            "default": 20
          },
          "search": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search",
            "description": "Search query"
          },
          "resource_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttackResourceType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "ResourceListResponse"
      },
      "ResourcePreviewResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "file_label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Label"
          },
          "resource_type": {
            "$ref": "#/components/schemas/AttackResourceType"
          },
          "line_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Count"
          },
          "byte_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Byte Size"
          },
          "checksum": {
            "type": "string",
            "title": "Checksum",
            "default": ""
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "line_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Format"
          },
          "line_encoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Encoding"
          },
          "used_for_modes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Used For Modes"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "unrestricted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unrestricted"
          },
          "is_uploaded": {
            "type": "boolean",
            "title": "Is Uploaded",
            "default": false
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "preview_lines": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Preview Lines"
          },
          "preview_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Error"
          },
          "max_preview_lines": {
            "type": "integer",
            "title": "Max Preview Lines"
          }
        },
        "type": "object",
        "required": [
          "id",
          "file_name",
          "resource_type",
          "preview_lines",
          "max_preview_lines"
        ],
        "title": "ResourcePreviewResponse"
      },
      "ResourceUpdateRequest": {
        "properties": {
          "file_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Name",
            "description": "Resource file name"
          },
          "file_label": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "File Label",
            "description": "Freeform label for the resource (up to 50 chars)"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id",
            "description": "Project ID to associate with resource"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source",
            "description": "Resource source"
          },
          "unrestricted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unrestricted",
            "description": "If true, resource is globally accessible"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "List of user-provided tags"
          },
          "used_for_modes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttackMode"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Used For Modes",
            "description": "List of attack modes this resource is used for"
          },
          "line_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Format",
            "description": "Line format for resource"
          },
          "line_encoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Encoding",
            "description": "Line encoding for resource"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "ResourceUpdateRequest"
      },
      "ResourceUploadFormSchema": {
        "properties": {
          "allowed_resource_types": {
            "items": {
              "$ref": "#/components/schemas/AttackResourceType"
            },
            "type": "array",
            "title": "Allowed Resource Types",
            "description": "Allowed resource types for upload",
            "examples": [
              [
                "mask_list",
                "rule_list",
                "word_list",
                "charset"
              ]
            ]
          },
          "max_file_size_mb": {
            "type": "integer",
            "title": "Max File Size Mb",
            "description": "Maximum file size in MB for upload",
            "examples": [
              1
            ]
          },
          "max_line_count": {
            "type": "integer",
            "title": "Max Line Count",
            "description": "Maximum number of lines for in-browser editing",
            "examples": [
              5000
            ]
          },
          "minio_bucket": {
            "type": "string",
            "title": "Minio Bucket",
            "description": "MinIO bucket name",
            "examples": [
              "cipherswarm-resources"
            ]
          },
          "minio_endpoint": {
            "type": "string",
            "title": "Minio Endpoint",
            "description": "MinIO endpoint",
            "examples": [
              "minio:9000"
            ]
          },
          "minio_secure": {
            "type": "boolean",
            "title": "Minio Secure",
            "description": "Whether MinIO uses HTTPS",
            "examples": [
              false
            ]
          }
        },
        "type": "object",
        "required": [
          "allowed_resource_types",
          "max_file_size_mb",
          "max_line_count",
          "minio_bucket",
          "minio_endpoint",
          "minio_secure"
        ],
        "title": "ResourceUploadFormSchema"
      },
      "ResourceUploadMeta": {
        "properties": {
          "file_name": {
            "type": "string",
            "title": "File Name",
            "description": "Original file name"
          },
          "resource_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AttackResourceType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Type of the resource"
          }
        },
        "type": "object",
        "required": [
          "file_name"
        ],
        "title": "ResourceUploadMeta"
      },
      "ResourceUploadResponse": {
        "properties": {
          "resource_id": {
            "type": "string",
            "format": "uuid",
            "title": "Resource Id",
            "description": "UUID of the created resource"
          },
          "presigned_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Presigned Url",
            "description": "Presigned S3 upload URL (null for text blobs)"
          },
          "resource": {
            "$ref": "#/components/schemas/ResourceUploadMeta",
            "description": "Resource metadata"
          }
        },
        "type": "object",
        "required": [
          "resource_id",
          "presigned_url",
          "resource"
        ],
        "title": "ResourceUploadResponse"
      },
      "ResourceUploadedResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "file_label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Label"
          },
          "resource_type": {
            "$ref": "#/components/schemas/AttackResourceType"
          },
          "line_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Count"
          },
          "byte_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Byte Size"
          },
          "checksum": {
            "type": "string",
            "title": "Checksum",
            "default": ""
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "line_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Format"
          },
          "line_encoding": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Encoding"
          },
          "used_for_modes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Used For Modes"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "unrestricted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unrestricted"
          },
          "is_uploaded": {
            "type": "boolean",
            "title": "Is Uploaded",
            "default": false
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "id",
          "file_name",
          "resource_type"
        ],
        "title": "ResourceUploadedResponse",
        "description": "Response for upload verification: resource metadata only."
      },
      "ResourceUsagePoint": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Timestamp of the resource usage point"
          },
          "hash_rate": {
            "type": "number",
            "title": "Hash Rate",
            "description": "Hash rate of the resource usage point (hashes per second)"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "hash_rate"
        ],
        "title": "ResourceUsagePoint"
      },
      "RuleExplanation": {
        "properties": {
          "rule": {
            "type": "string",
            "title": "Rule",
            "description": "Hashcat rule string",
            "examples": [
              "c"
            ]
          },
          "desc": {
            "type": "string",
            "title": "Desc",
            "description": "Explanation of the rule",
            "examples": [
              "Lowercase all characters"
            ]
          }
        },
        "type": "object",
        "required": [
          "rule",
          "desc"
        ],
        "title": "RuleExplanation"
      },
      "RuleExplanationList": {
        "properties": {
          "rule_explanations": {
            "items": {
              "$ref": "#/components/schemas/RuleExplanation"
            },
            "type": "array",
            "title": "Rule Explanations",
            "description": "List of hashcat rule explanations"
          }
        },
        "type": "object",
        "required": [
          "rule_explanations"
        ],
        "title": "RuleExplanationList"
      },
      "RulelistDropdownResponse": {
        "properties": {
          "rulelists": {
            "items": {
              "$ref": "#/components/schemas/RulelistItem"
            },
            "type": "array",
            "title": "Rulelists"
          }
        },
        "type": "object",
        "required": [
          "rulelists"
        ],
        "title": "RulelistDropdownResponse"
      },
      "RulelistItem": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "line_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "file_name"
        ],
        "title": "RulelistItem"
      },
      "SetContextRequest": {
        "properties": {
          "project_id": {
            "type": "integer",
            "title": "Project Id",
            "description": "Project ID to set as active",
            "examples": [
              1
            ]
          }
        },
        "type": "object",
        "required": [
          "project_id"
        ],
        "title": "SetContextRequest"
      },
      "StatusEnum": {
        "type": "string",
        "enum": [
          "active",
          "idle",
          "inactive"
        ],
        "title": "StatusEnum",
        "description": "Status of a queue."
      },
      "SystemHealthComponents": {
        "properties": {
          "minio": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MinioHealth"
              },
              {
                "$ref": "#/components/schemas/MinioHealthDetailed"
              }
            ],
            "title": "Minio"
          },
          "redis": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RedisHealth"
              },
              {
                "$ref": "#/components/schemas/RedisHealthDetailed"
              }
            ],
            "title": "Redis"
          },
          "postgres": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PostgresHealth"
              },
              {
                "$ref": "#/components/schemas/PostgresHealthDetailed"
              }
            ],
            "title": "Postgres"
          }
        },
        "type": "object",
        "required": [
          "minio",
          "redis",
          "postgres"
        ],
        "title": "SystemHealthComponents",
        "description": "Detailed system health information for components"
      },
      "SystemHealthOverview": {
        "properties": {
          "minio": {
            "$ref": "#/components/schemas/MinioHealth"
          },
          "redis": {
            "$ref": "#/components/schemas/RedisHealth"
          },
          "postgres": {
            "$ref": "#/components/schemas/PostgresHealth"
          },
          "agents": {
            "$ref": "#/components/schemas/AgentHealthSummary"
          }
        },
        "type": "object",
        "required": [
          "minio",
          "redis",
          "postgres",
          "agents"
        ],
        "title": "SystemHealthOverview"
      },
      "SystemVersionResponse": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version",
            "description": "Current system version"
          },
          "project_name": {
            "type": "string",
            "title": "Project Name",
            "description": "Project name"
          }
        },
        "type": "object",
        "required": [
          "version",
          "project_name"
        ],
        "title": "SystemVersionResponse",
        "description": "System version information."
      },
      "TaskOutV1": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "The id of the task"
          },
          "attack_id": {
            "type": "integer",
            "title": "Attack Id",
            "description": "The id of the attack"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date",
            "description": "The time the task was started"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the task"
          },
          "skip": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Skip",
            "description": "The offset of the keyspace"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit",
            "description": "The limit of the keyspace"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "attack_id",
          "start_date",
          "status"
        ],
        "title": "TaskOutV1"
      },
      "TaskProgressUpdate": {
        "properties": {
          "progress_percent": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Progress Percent",
            "description": "Task progress as a percentage (0-100)"
          },
          "keyspace_processed": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Keyspace Processed",
            "description": "Number of keyspace units processed so far"
          }
        },
        "type": "object",
        "required": [
          "progress_percent",
          "keyspace_processed"
        ],
        "title": "TaskProgressUpdate"
      },
      "TaskStatus": {
        "type": "string",
        "enum": [
          "pending",
          "running",
          "paused",
          "completed",
          "failed",
          "abandoned"
        ],
        "title": "TaskStatus",
        "description": "Enum for task statuses."
      },
      "TaskStatusUpdate": {
        "properties": {
          "original_line": {
            "type": "string",
            "title": "Original Line",
            "description": "The original line from hashcat"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "title": "Time",
            "description": "The time the status was received"
          },
          "session": {
            "type": "string",
            "title": "Session",
            "description": "The session name"
          },
          "hashcat_guess": {
            "$ref": "#/components/schemas/HashcatGuess",
            "description": "The current guess context"
          },
          "status": {
            "type": "integer",
            "title": "Status",
            "description": "The status of the task"
          },
          "target": {
            "type": "string",
            "title": "Target",
            "description": "The target of the task"
          },
          "progress": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Progress",
            "description": "The progress of the task"
          },
          "restore_point": {
            "type": "integer",
            "title": "Restore Point",
            "description": "The restore point of the task"
          },
          "recovered_hashes": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Recovered Hashes",
            "description": "The number of recovered hashes"
          },
          "recovered_salts": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Recovered Salts",
            "description": "The number of recovered salts"
          },
          "rejected": {
            "type": "integer",
            "title": "Rejected",
            "description": "The number of rejected guesses"
          },
          "device_statuses": {
            "items": {
              "$ref": "#/components/schemas/DeviceStatus"
            },
            "type": "array",
            "title": "Device Statuses",
            "description": "The status of the devices used for the task"
          },
          "time_start": {
            "type": "string",
            "format": "date-time",
            "title": "Time Start",
            "description": "The time the task started."
          },
          "estimated_stop": {
            "type": "string",
            "format": "date-time",
            "title": "Estimated Stop",
            "description": "The estimated time of completion."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "original_line",
          "time",
          "session",
          "hashcat_guess",
          "status",
          "target",
          "progress",
          "restore_point",
          "recovered_hashes",
          "recovered_salts",
          "rejected",
          "device_statuses",
          "time_start",
          "estimated_stop"
        ],
        "title": "TaskStatusUpdate"
      },
      "UploadErrorEntryListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/UploadErrorEntryOut"
            },
            "type": "array",
            "title": "Items",
            "description": "List of items"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "page": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Page",
            "description": "Current page number",
            "default": 1
          },
          "page_size": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Page Size",
            "description": "Number of items per page",
            "default": 20
          },
          "search": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search",
            "description": "Search query"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "UploadErrorEntryListResponse"
      },
      "UploadErrorEntryOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "ID of the upload error entry"
          },
          "upload_id": {
            "type": "integer",
            "title": "Upload Id",
            "description": "ID of the upload task"
          },
          "line_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Number",
            "description": "Line number of the error"
          },
          "raw_line": {
            "type": "string",
            "title": "Raw Line",
            "description": "Raw line that caused the error"
          },
          "error_message": {
            "type": "string",
            "title": "Error Message",
            "description": "Error message"
          }
        },
        "type": "object",
        "required": [
          "id",
          "upload_id",
          "line_number",
          "raw_line",
          "error_message"
        ],
        "title": "UploadErrorEntryOut"
      },
      "UploadProcessingStep": {
        "properties": {
          "step_name": {
            "type": "string",
            "title": "Step Name",
            "description": "Name of the processing step"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Status of this step: pending, running, completed, failed"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At",
            "description": "ISO8601 start time for this step"
          },
          "finished_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished At",
            "description": "ISO8601 finish time for this step"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "Error message if step failed"
          },
          "progress_percentage": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress Percentage",
            "description": "Progress percentage for this step"
          }
        },
        "type": "object",
        "required": [
          "step_name",
          "status"
        ],
        "title": "UploadProcessingStep",
        "description": "Represents a single step in the upload processing pipeline."
      },
      "UploadStatusOut": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Current status of the upload task",
            "examples": [
              "completed"
            ]
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At",
            "description": "ISO8601 start time",
            "examples": [
              "2024-06-01T12:00:00Z"
            ]
          },
          "finished_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished At",
            "description": "ISO8601 finish time",
            "examples": [
              "2024-06-01T12:05:00Z"
            ]
          },
          "error_count": {
            "type": "integer",
            "title": "Error Count",
            "description": "Number of errors encountered",
            "examples": [
              0
            ]
          },
          "hash_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hash Type",
            "description": "Inferred hash type name",
            "examples": [
              "sha512crypt"
            ]
          },
          "hash_type_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hash Type Id",
            "description": "Inferred hash type ID",
            "examples": [
              1800
            ]
          },
          "preview": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Preview",
            "description": "Preview of extracted hashes",
            "examples": [
              [
                "abc123",
                "def456"
              ]
            ]
          },
          "validation_state": {
            "type": "string",
            "title": "Validation State",
            "description": "Validation state: valid, invalid, partial, pending",
            "examples": [
              "valid"
            ]
          },
          "upload_resource_file_id": {
            "type": "string",
            "title": "Upload Resource File Id",
            "description": "UUID of the upload resource file"
          },
          "upload_task_id": {
            "type": "integer",
            "title": "Upload Task Id",
            "description": "ID of the upload task"
          },
          "processing_steps": {
            "items": {
              "$ref": "#/components/schemas/UploadProcessingStep"
            },
            "type": "array",
            "title": "Processing Steps",
            "description": "Detailed information about each processing step"
          },
          "current_step": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Step",
            "description": "Name of the currently executing step"
          },
          "total_hashes_found": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Hashes Found",
            "description": "Total number of hashes found in the file"
          },
          "total_hashes_parsed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Hashes Parsed",
            "description": "Total number of hashes successfully parsed"
          },
          "campaign_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Campaign Id",
            "description": "ID of the created campaign, if available"
          },
          "hash_list_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hash List Id",
            "description": "ID of the created hash list, if available"
          },
          "overall_progress_percentage": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Overall Progress Percentage",
            "description": "Overall progress percentage of the upload task"
          }
        },
        "type": "object",
        "required": [
          "status",
          "error_count",
          "preview",
          "validation_state",
          "upload_resource_file_id",
          "upload_task_id"
        ],
        "title": "UploadStatusOut"
      },
      "UserContextDetail": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "name",
          "role"
        ],
        "title": "UserContextDetail"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "name",
          "password"
        ],
        "title": "UserCreate",
        "description": "Schema for creating a new user."
      },
      "UserCreateControl": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "is_superuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Superuser"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "required": [
          "email",
          "name",
          "password"
        ],
        "title": "UserCreateControl",
        "description": "Schema for creating a new user via Control API with optional role."
      },
      "UserListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/UserRead"
            },
            "type": "array",
            "title": "Items",
            "description": "List of items"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "description": "Number of items requested"
          },
          "offset": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Offset",
            "description": "Number of items skipped"
          },
          "search": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "limit",
          "offset"
        ],
        "title": "UserListResponse"
      },
      "UserRead": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "name",
          "is_active",
          "is_superuser",
          "created_at",
          "updated_at",
          "role"
        ],
        "title": "UserRead",
        "description": "Schema for reading user data."
      },
      "UserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          }
        },
        "type": "object",
        "title": "UserUpdate",
        "description": "Schema for updating user data."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WordlistDropdownResponse": {
        "properties": {
          "wordlists": {
            "items": {
              "$ref": "#/components/schemas/WordlistItem"
            },
            "type": "array",
            "title": "Wordlists"
          }
        },
        "type": "object",
        "required": [
          "wordlists"
        ],
        "title": "WordlistDropdownResponse"
      },
      "WordlistItem": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "line_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "file_name"
        ],
        "title": "WordlistItem"
      },
      "WordlistSource": {
        "type": "string",
        "enum": [
          "existing",
          "previous_passwords"
        ],
        "title": "WordlistSource"
      },
      "app__api__v1__endpoints__control__hash_guess__HashGuessRequest": {
        "properties": {
          "hash_material": {
            "type": "string",
            "title": "Hash Material",
            "description": "Pasted hash lines or blob"
          }
        },
        "type": "object",
        "required": [
          "hash_material"
        ],
        "title": "HashGuessRequest"
      },
      "app__api__v1__endpoints__web__hash_guess__HashGuessRequest": {
        "properties": {
          "hash_material": {
            "type": "string",
            "minLength": 1,
            "title": "Hash Material",
            "description": "Pasted hash lines or blob",
            "examples": [
              "5f4dcc3b5aa765d61d8327deb882cf99"
            ]
          }
        },
        "type": "object",
        "required": [
          "hash_material"
        ],
        "title": "HashGuessRequest",
        "description": "Request body for the hash guess endpoint."
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}