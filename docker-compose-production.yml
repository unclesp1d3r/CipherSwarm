services:
  web:
    image: ghcr.io/unclesp1d3r/cipherswarm:latest
    ports:
      - "80:80"
    environment:
      - RAILS_MASTER_KEY=$RAILS_MASTER_KEY
      - REDIS_URL=redis://redis-db:6379
      - DATABASE_URL=postgres://root:password@postgres-db/
      - DB_HOST=postgres-db
      - MINIO_ENDPOINT=http://${MINIO_PUBLIC_IP:-127.0.0.1}:9000
    depends_on:
      - redis-db
      - postgres-db
      - minio
      - sidekiq
    volumes:
      - storage:/rails/storage
    networks:
      - frontend
      - backend
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure

  postgres-db:
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready
      interval: 2s
      timeout: 5s
      retries: 30
    networks:
      - backend
    deploy:
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"

  minio:
    image: bitnami/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio:/bitnami/minio/data
    networks:
      - frontend
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_DEFAULT_BUCKETS=application
    deploy:
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"

  redis-db:
    image: redis
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    volumes:
      - redis:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5

  sidekiq:
    image: ghcr.io/unclesp1d3r/cipherswarm:latest
    command: bundle exec sidekiq
    environment:
      - RAILS_MASTER_KEY=$RAILS_MASTER_KEY
      - REDIS_URL=redis://redis-db:6379
      - DATABASE_URL=postgres://root:password@postgres-db/
      - DB_HOST=postgres
      - MINIO_ENDPOINT=http://${MINIO_PUBLIC_IP:-127.0.0.1}:9000
    depends_on:
      - redis-db
      - postgres-db
      - minio
    volumes:
      - storage:/rails/storage
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 4
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s


networks:
  backend:
  frontend:

volumes:
  storage:
  postgres:
  redis:
  minio:
    driver: local
