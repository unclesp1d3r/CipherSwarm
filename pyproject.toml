[project]
name = "cipherswarm"
version = "0.1.0"
description = "A distributed password cracking management system"
authors = [{ name = "CipherSwarm Team", email = "team@cipherswarm.org" }]
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.115.12",
    "uvicorn[standard]>=0.27.1",
    "sqlalchemy>=2.0.27",
    "alembic>=1.13.1",
    "pydantic>=2.11.4",
    "pydantic-settings>=2.1.0",
    "asyncpg>=0.29.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.9",
    "celery>=5.3.6",
    "redis>=5.0.1",
    "httpx>=0.26.0",
    "python-dotenv>=1.0.1",
    "email-validator>=2.1.0.post1",
]

[project.scripts]
server = "app.main:run_server"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.23.5",
    "black>=24.1.1",
    "ruff>=0.2.1",
    "mypy>=1.8.0",
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.5.13",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py313"

exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "venv",
    "__pycache__",
    "build",
    "dist",
    "alembic/versions/*",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "B",   # flake8-bugbear
    "RUF", # Ruff-specific rules
    "D",   # pydocstyle
]

ignore = [
    "D203", # One blank line required before class docstring
    "D213", # Multi-line docstring summary should start at the second line
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["D"]
"alembic/versions/**/*.py" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --cov=app"
testpaths = ["tests"]
asyncio_mode = "auto"

[dependency-groups]
dev = [
    "deptry>=0.23.0",
    "mkdocs-exporter>=6.2.0",
    "mkdocstrings>=0.29.1",
    "pre-commit>=4.2.0",
]
