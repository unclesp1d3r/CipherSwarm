---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
  schemas:
    error_object:
      type: object
      properties:
        error:
          type: string
    errors_object:
      type: object
      properties:
        errors:
          "$ref": "#/components/schemas/errors_map"
    errors_map:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    advanced_agent_configuration:
      type: object
      properties:
        agent_update_interval:
          type: integer
          nullable: true
        use_native_hashcat:
          type: boolean
          nullable: true
        backend_device:
          type: string
          nullable: true
    agent:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        client_signature:
          type: string
        command_parameters:
          type: string
          nullable: true
        cpu_only:
          type: boolean
        trusted:
          type: boolean
        ignore_errors:
          type: boolean
        operating_system:
          type: string
        devices:
          type: array
          items:
            type: string
        advanced_configuration:
          ref: "#/components/schemas/AdvancedAgentConfiguration"
          nullable: true
    attack:
      type: object
      required:
      - id
      - attack_mode
      - mask
      - increment_mode
      - increment_minimum
      - increment_maximum
      - optimized
      - slow_candidate_generators
      - workload_profile
      - disable_markov
      - classic_markov
      - markov_threshold
      - left_rule
      - right_rule
      - custom_charset_1
      - custom_charset_2
      - custom_charset_3
      - custom_charset_4
      - hash_list_id
      - word_lists
      - rule_lists
      - hash_mode
      - hash_list_url
      - hash_list_checksum
      - url
      properties:
        id:
          type: integer
          default: 0
          title: The id Schema
        attack_mode:
          type: string
          default: ''
          title: The attack_mode Schema
          examples:
          - dictionary
        mask:
          type: string
          default: ''
          title: The mask Schema
          examples:
          - "?a?a?a?a?a?a?a?a"
        increment_mode:
          type: boolean
          default: false
          title: The increment_mode Schema
        increment_minimum:
          type: integer
          default: 0
          title: The increment_minimum Schema
        increment_maximum:
          type: integer
          default: 0
          title: The increment_maximum Schema
        optimized:
          type: boolean
          default: false
          title: The optimized Schema
        slow_candidate_generators:
          type: boolean
          default: false
          title: The slow_candidate_generators Schema
        workload_profile:
          type: integer
          default: 0
          title: The workload_profile Schema
        disable_markov:
          type: boolean
          default: false
          title: The disable_markov Schema
        classic_markov:
          type: boolean
          default: false
          title: The classic_markov Schema
        markov_threshold:
          type: integer
          default: 0
          title: The markov_threshold Schema
        left_rule:
          type: string
          default: ''
          title: The left_rule Schema
          nullable: true
        right_rule:
          type: string
          default: ''
          title: The right_rule Schema
          nullable: true
        custom_charset_1:
          type: string
          default: ''
          title: The custom_charset_1 Schema
          nullable: true
        custom_charset_2:
          type: string
          default: ''
          title: The custom_charset_2 Schema
          nullable: true
        custom_charset_3:
          type: string
          default: ''
          title: The custom_charset_3 Schema
          nullable: true
        custom_charset_4:
          type: string
          default: ''
          title: The custom_charset_4 Schema
          nullable: true
        hash_list_id:
          type: integer
          default: 0
          title: The hash_list_id Schema
        word_lists:
          type: array
          default: []
          title: The word_lists Schema
          items: {}
        rule_lists:
          type: array
          default: []
          title: The rule_lists Schema
          items: {}
        hash_mode:
          type: integer
          default: 0
          title: The hash_mode Schema
        hash_list_url:
          type: string
          default: ''
          title: The hash_list_url Schema
          examples:
          - http://www.example.com/api/v1/client/attacks/129/hash_list
        hash_list_checksum:
          type: string
          default: ''
          title: The hash_list_checksum Schema
          examples:
          - 1B2M2Y8AsgTpgAmY7PhCfg==
        url:
          type: string
          default: ''
          title: The url Schema
          examples:
          - http://www.example.com/attacks/129.json
    cracker_binary:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        version:
          type: string
        archive_file:
          type: string
        operating_systems:
          type: array
          items:
            type: string
      required:
      - name
      - version
      - archive_file
      - operating_systems
    cracker_update:
      type: object
      properties:
        available:
          type: boolean
        latest_version:
          type: string
          nullable: true
        download_url:
          type: string
          nullable: true
        exec_name:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      required:
      - available
    hashcat_benchmark:
      type: object
      properties:
        hash_type:
          type: integer
        runtime:
          type: integer
        hash_speed:
          type: number
        device:
          type: integer
      required:
      - hash_type
      - runtime
      - hash_speed
      - device
    hashcat_result:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        hash:
          type: string
        plain_text:
          type: string
      required:
      - timestamp
      - hash
      - plain_text
    task:
      type: object
      properties:
        id:
          type: integer
        attack_id:
          type: integer
        start_date:
          type: string
          format: date-time
        status:
          type: string
        skip:
          type: integer
          nullable: true
        limit:
          type: integer
          nullable: true
      required:
      - id
      - attack_id
      - start_date
      - status
    task_status:
      type: object
      properties:
        original_line:
          type: string
        time:
          type: string
          format: date-time
        session:
          type: string
        guess:
          "$ref": "#/components/schemas/hashcat_guess"
        status:
          type: integer
        target:
          type: string
        progress:
          type: array
          items:
            type: integer
        restore_point:
          type: integer
        recovered_hashes:
          type: array
          items:
            type: integer
        recovered_salts:
          type: array
          items:
            type: integer
        rejected:
          type: integer
        devices:
          type: array
          items:
            "$ref": "#/components/schemas/device_status"
        time_start:
          type: integer
          title: The time the task started (as Unix epoc time)
        estimated_stop:
          type: integer
          title: The estimated time of completion (as Unix epoc time)
    device_status:
      type: object
      properties:
        device_id:
          type: integer
        device_name:
          type: string
        device_type:
          type: string
        speed:
          type: integer
        utilization:
          type: integer
        temperature:
          type: integer
    hashcat_guess:
      type: object
      properties:
        guess_base:
          type: string
        guess_base_count:
          type: integer
        guess_base_offset:
          type: integer
        guess_base_percent:
          type: number
        guess_mod:
          type: string
        guess_mod_count:
          type: integer
        guess_mod_offset:
          type: integer
        guess_mod_percent:
          type: number
        guess_mode:
          type: integer
  paths: {}
  servers:
  - url: https://{defaultHost}
    variables:
      defaultHost:
        default: www.example.com
paths:
  "/api/v1/client/agents/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: integer
    get:
      summary: Gets an instance of an agent
      tags:
      - Agents
      security:
      - bearer_auth: []
      operationId: showAgent
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/agent"
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_object"
    put:
      summary: Updates the agent
      tags:
      - Agents
      security:
      - bearer_auth: []
      operationId: updateAgent
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/agent"
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_object"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/agent"
  "/api/v1/client/agents/{id}/heartbeat":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    post:
      summary: Send a heartbeat for an agent
      tags:
      - Agents
      security:
      - bearer_auth: []
      operationId: heartbeatAgent
      responses:
        '204':
          description: successful
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_object"
  "/api/v1/client/agents/{id}/last_benchmark":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: integer
    get:
      summary: last_benchmark agent
      tags:
      - Agents
      security:
      - bearer_auth: []
      operationId: lastBenchmarkAgent
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  last_benchmark_date:
                    type: string
                    format: date_time
                required:
                - last_benchmark_date
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_object"
  "/api/v1/client/agents/{id}/submit_benchmark":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    post:
      summary: submit_benchmark agent
      tags:
      - Agents
      security:
      - bearer_auth: []
      operationId: submitBenchmarkAgent
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/hashcat_benchmark"
  "/api/v1/client/attacks/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show attack
      tags:
      - Attacks
      security:
      - bearer_auth: []
      operationId: showAttack
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/attack"
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_object"
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_object"
  "/api/v1/client/attacks/{id}/hash_list":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: hash_list attack
      tags:
      - Attacks
      security:
      - bearer_auth: []
      operationId: hashListAttack
      responses:
        '200':
          description: successful
        '404':
          description: not found
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/error_object"
  "/api/v1/client/crackers/check_for_cracker_update":
    get:
      summary: check_for_cracker_update cracker
      tags:
      - Crackers
      security:
      - bearer_auth: []
      operationId: checkForCrackerUpdate
      parameters:
      - name: operating_system
        in: query
        description: operating_system
        schema:
          type: string
      - name: version
        in: query
        description: version
        schema:
          type: string
      responses:
        '200':
          description: operating system not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/cracker_update"
        '400':
          description: operating system parameter invalid
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_object"
  "/api/v1/client/tasks/new":
    get:
      summary: new task
      tags:
      - Tasks
      security:
      - bearer_auth: []
      operationId: newTask
      responses:
        '204':
          description: no new task available
  "/api/v1/client/tasks/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show task
      tags:
      - Tasks
      security:
      - bearer_auth: []
      operationId: showTask
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/task"
  "/api/v1/client/tasks/{id}/submit_crack":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    post:
      summary: submit_crack task
      tags:
      - Tasks
      security:
      - bearer_auth: []
      operationId: submitCrack
      parameters: []
      responses:
        '200':
          description: successful
        '204':
          description: No more uncracked hashes
        '404':
          description: Hash value not found
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/hashcat_result"
  "/api/v1/client/tasks/{id}/submit_status":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    post:
      summary: submit_status task
      tags:
      - Tasks
      security:
      - bearer_auth: []
      operationId: submitStatus
      parameters: []
      responses:
        '204':
          description: task received successfully
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/task_status"
        description: status
  "/api/v1/client/tasks/{id}/accept_task":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    post:
      summary: accept_task task
      tags:
      - Tasks
      security:
      - bearer_auth: []
      operationId: acceptTask
      responses:
        '204':
          description: task accepted successfully
        '422':
          description: task already completed
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_object"
        '404':
          description: task not found for agent
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_object"
  "/api/v1/client/tasks/{id}/exhausted":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    post:
      summary: exhausted task
      tags:
      - Tasks
      security:
      - bearer_auth: []
      operationId: exhaustedTask
      responses:
        '204':
          description: successful
  "/api/v1/client/configuration":
    get:
      summary: Obtains the configuration for the agent
      tags:
      - Client
      security:
      - bearer_auth: []
      operationId: configuration
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  config:
                    ref: "#/components/schemas/advanced_agent_configuration"
                    nullable: true
                  api_version:
                    type: integer
        '401':
          description: unauthorized
  "/api/v1/client/authenticate":
    get:
      summary: Authenticates the client. This is used to verify that the client is
        able to connect to the server.
      tags:
      - Client
      security:
      - bearer_auth: []
      operationId: authenticate
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  authenticated:
                    type: boolean
                  agent_id:
                    type: integer
                required:
                - authenticated
                - agent_id
        '401':
          description: unauthorized
